{"version":3,"sources":["Navbar.js","Banner.js","Header.js","Introduction.js","Start.js","Form.js","MyMap.js","MapContainer.js","Chart.js","Charts.js","Analytics.js","Footer.js","About.js","App.js","serviceWorker.js","index.js"],"names":["NavbarFeatures","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","reactstrap_es","color","dark","light","expand","onClick","className","aria-label","navbar","id","tag","Link","to","Component","Banner","lib","Banner_Buttons","Buttons","role","Header","Navbar_NavbarFeatures","Banner_Banner","Introduction","href","Introduction_Cards","Cards","Start","Start_StartForm","adoptCallback","StartForm","county","handleChange","event","target","value","_this2","callBack","htmlFor","type","name","placeholder","onChange","Form","Form_Table","form","Table","rows","cols","MyMap","_Component","addStyle","feature","specificCountyData","data","filter","obj","County","properties","fillColor","getColor","targetFocus","weight","opacity","dashArray","fillOpacity","d","onEachFeature","layer","Math","round","displayedText","concat","targetAge","targetYear","on","mouseover","L","popup","setLatLng","latlng","setContent","openOn","_map","geojsondata","allData","year","focus","age","inherits","createClass","key","nextProps","prevProps","currentState","currentProps","Age","Year","_this3","fetch","then","response","json","jsonData","Papa","parse","header","dynamicTyping","download","trimHeaders","complete","papaResults","papaData","temp","legend","style","background","Map","viewport","center","zoom","height","TileLayer","url","attribution","minZoom","maxZoom","length","GeoJSON","ref","hash","control_default","position","MapContainer","clickYear","console","log","parseInt","clickAge","clickFocus","buttons","MyMap_MyMap","Chart","chartData","text","es","labels","datasets","backgroundColor","options","title","display","fontSize","animation","animateScale","duration","width","Charts","allFeedback","overallSatisfaction","charts","questionNames","results","forEach","entry","contains","location","Overall_Experience","Convenience","Timely_Ballot","Online_Voting","Timeframe","Resources","Comments","push","newLocation","i","j","toUpperCase","chartDataCopy","reader","body","getReader","ReadableStream","start","controller","pump","read","_ref","done","enqueue","close","stream","Response","blob","responses","totalResponses","FileReader","onload","result","processResponses","getTotalResponse","qNames","keys","readAsText","catch","error","locationIndex","getLocationIndex","replace","chartIndex","splice","chart","question","indexOf","map","updateChart","removeChart","Chart_Chart","stateCopy","Analytics","Analytics_AnalyticsHeader","Analytics_Legend","Charts_Charts","MapContainer_MapContainer","Legend","AnalyticsHeader","Footer","About","About_AboutContent","AboutContent","App","BrowserRouter","basename","process","Switch","Route","exact","path","component","HomePage","currentCounty","countyName","Header_Header","Introduction_Introduction","Start_Start","chooseCounty","Form_Form","Analytics_Analytics","Footer_Footer","Boolean","window","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e9ec288.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\n\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    Nav,\n    NavItem,\n    NavLink} from 'reactstrap';\n\n// Comonent representing the navigation bar so the user can navigate the web application.\nexport default class NavbarFeatures extends Component {\n    // Constructor sets state for navigation\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false,\n        };\n    }\n    \n    // Changes the state isOpen on toggle.\n    toggle() {\n        this.setState({\n        isOpen: !this.state.isOpen\n        });\n    }\n\n    // Renders the navigation bar with options to navigate to Home, About, and to get started. \n    render() {\n        return (\n            <nav>\n                <Navbar color=\"transparent\" dark={this.props.dark} light={this.props.light} expand=\"md\">\n                <NavbarToggler onClick={this.toggle} className=\"mr-2\" aria-label=\"Navbar Toggle\"/>\n                <Collapse isOpen={this.state.isOpen} navbar>\n                    <Nav navbar>\n                        <NavItem id=\"home-button\">\n                            <NavLink tag={Link} to=\"/\">Home</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink tag={Link} to=\"/about\">About</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink tag={Link} to=\"/home#get-started\">Get Started</NavLink>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n                </Navbar>\n            </nav>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\n\n// Component representing the banner of the web app\nexport default class Banner extends Component {\n    render() {\n      return (\n        // Made up of the main banner and navigating buttons\n        <div id=\"banner\">\n            <h1><Link to=\"/home\">VoteFact</Link></h1>\n            <p>A review and analytics platform for voters to learn about turnout and leave reviews</p>\n            <Buttons />\n        </div>\n      );\n    }\n}\n\n// Component representing the buttons for the the main banner. THese buttons link to\n// the start section and the about page.\nclass Buttons extends Component {\n  render() {\n    return(\n      <div id=\"banner-buttons\">\n        <Link to=\"/home#get-started\" role=\"button\" id=\"start-button\">Get Started</Link>\n        <Link to=\"/about\" role=\"button\" id=\"learn-button\">Learn More</Link>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport NavbarFeatures from './Navbar';\nimport Banner from './Banner';\n\n// Represents the Header of the app\nexport default class Header extends Component {\n  render() {\n    return (\n      // Passes in dark and light prop to navbarfeatures to indicate the styling of the navbar\n      <header>\n        <NavbarFeatures dark={true} light={false}/>\n        <Banner />\n      </header>\n    );\n  }\n}","import React, { Component } from 'react';\n\n// Component representing the Introduction that contains information about the application and some contextual information\nexport default class Introduction extends Component {\n    // Renders the Introduction component that contains description information and info cards.\n    render() {\n        return (\n            <div id=\"introduction\" className=\"content-container\">\n                <div>\n                    <h2>Introducing the voter turnout and review platform for Washingtonians</h2>\n                    <p>Leave a review, digest analytics, and see what others have to say.</p>\n                    Many voters struggle with recognizing the value of their vote. A common sentiment is\n                    \"How does my one vote matter?\". While it may not seem like your individual vote can make the \n                    difference, if everyone shared that sentiment, then it truly wouldn't matter! Additionally, \n                    with races sometimes coming down right to the line, a few votes can make all the difference.\n                    Senator Bernie Sanders once won a mayoral election by a margin of just <a href=\"https://en.wikipedia.org/wiki/Burlington_mayoral_election,_1981\">10 votes\n                    </a>. \n                </div>\n                <div className=\"card-container\">\n                    <Cards />\n                </div>\n            </div>\n        );\n    }\n}\n\n// Cards component that represents the information cards that represent information about what the application does\n// and can do.\nclass Cards extends Component {\n    // Renders the Cards component.\n    render() {\n        return (\n            <div className=\"cards\">\n                <div>\n                    <i className=\"fas fa-pencil-alt fa-3x\"></i>\n                    <p>Take the time to leave a meaningful review about your voting experience. Whether you're on the go, or at home, VoteFact provides you with access anywhere and everywhere.</p>\n                </div>\n                <div>\n                    <i className=\"far fa-user fa-3x\"></i>                    \n                    <p>Review analytics about voter satisfaction in your local county. Government entities can utilize this data to develop comprehensive solutions in regard to voting.</p>\n                </div>\n                <div>\n                    <i className=\"fas fa-chart-bar fa-3x\"></i>\n                    <p>Analyze Washington State voter registration and turnout data through an interactive map. Filter by year and age to see how the data changes.</p>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\n// Component representing the Start component of the web application. Here, the user can input their County\n// and address to then  display the corresponding pie charts. \nexport default class Start extends Component {\n\n    // Renders a the start/get started and once the user presses the begin button, the county state changes\n    // and this is used to display charts for a specific county.\n    render() {\n        return (\n            <div id=\"get-started\">\n                <h2>Enter the Name of your County and Address</h2>\n                <p>Get started by simply following the provided instructions</p>\n                <StartForm adoptCallback={this.props.adoptCallback}/>\n            </div>\n        );\n    }\n}\n\nclass StartForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {county: \"\"};\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    // Changes the county state of the App component.\n    handleChange(event) {\n        this.setState({county: event.target.value});\n    }\n\n    render() {\n        let callBack = this.props.adoptCallback;\n        return (\n            <form>\n                <div id=\"name-input\">\n                    <label className=\"form-labels\" htmlFor=\"name\">County</label>\n                    <input aria-label=\"Input County\" type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name\" value={this.state.county} onChange={this.handleChange}/>\n                </div>\n                <div id=\"address-input\">\n                    <label className=\"form-labels\" htmlFor=\"address\">Address</label>\n                    <input aria-label=\"Input Address\" type=\"text\" name=\"address\" id=\"address\" placeholder=\"Address\" />\n                </div>\n                <div>\n                    <button aria-label=\"Begin\" type=\"button\" id=\"begin-button\" onClick={ () => callBack(this.state.county)}>Begin</button>\n                </div>\n            </form>\n        );\n    }\n}","import React, { Component } from 'react';\n\n// Component reprsenting the different questions and options the user can select to provide feedback\nexport default class Form extends Component {\n    // Renders the Form component. Contains the table that represents the feedback form.\n    render() {\n        return (\n            <div id=\"form\">\n                <h2>Feedback Form</h2>\n                <p>Answer the following questions about your voting experience</p>\n                <p>Survey Scale: 1=Very Poor, 5=Very Good</p>\n                <Table />\n                <div id=\"submit-feedback\">\n                    <button form=\"form\">Submit</button>\n                </div>\n            </div>\n        );\n    }\n}\n\n// Table component that represents the main feedback form. Users can choose multiple choice options\n// and then submit the form.\nclass Table extends Component {\n    // Renders the main feedback form (Table).\n    render() {\n        return(\n            <table>\n                <tbody>\n                    <tr>\n                        <td>Indicate the election type</td>\n                        <td>\n                            <label htmlFor=\"primary\">Primary</label>\n                            <input aria-label=\"Primary\" type=\"radio\" name=\"election-type\" id=\"primary\" value=\"primary\"/>\n                            <label htmlFor=\"general\">General</label>\n                            <input aria-label=\"General\" type=\"radio\" name=\"election-type\" id=\"general\" value=\"general\"/>\n                            <label htmlFor=\"local\">Local</label>\n                            <input aria-label=\"Local\" type=\"radio\" name=\"election-type\" id=\"local\" value=\"local\"/>\n                        </td>\n                    </tr>\n                </tbody>\n                <tbody>\n                    <tr>\n                        <td>How satisfied are you with your overall experience?</td>\n                        <td>\n                            <label htmlFor=\"q1-very-poor\">1</label>\n                            <input aria-label=\"1\" type=\"radio\" name=\"overall-satisfaction\" id=\"q1-very-poor\" value=\"very-poor\"/>\n                            <label htmlFor=\"q1-poor\">2</label>\n                            <input aria-label=\"2\" type=\"radio\" name=\"overall-satisfaction\" id=\"q1-poor\" value=\"poor\"/>\n                            <label htmlFor=\"q1-fair\">3</label>\n                            <input aria-label=\"3\" type=\"radio\" name=\"overall-satisfaction\" id=\"q1-fair\" value=\"fair\"/>\n                            <label htmlFor=\"q1-good\">4</label>\n                            <input aria-label=\"4\" type=\"radio\" name=\"overall-satisfaction\" id=\"q1-good\" value=\"good\"/>\n                            <label htmlFor=\"q1-very-good\">5</label>\n                            <input aria-label=\"5\" type=\"radio\" name=\"overall-satisfaction\" id=\"q1-very-good\" value=\"very-good\"/>\n                        </td>\n                    </tr>\n                </tbody>\n                <tbody>\n                    <tr>\n                        <td>How would you rate the convenience of a vote-by-mail method?</td>\n                        <td>\n                            <label htmlFor=\"q2-very-poor\">1</label>\n                            <input aria-label=\"1\" type=\"radio\" name=\"wait-time\" id=\"q2-very-poor\" value=\"very-poor\"/>\n                            <label htmlFor=\"q2-poor\">2</label>\n                            <input aria-label=\"2\" type=\"radio\" name=\"wait-time\" id=\"q2-poor\" value=\"poor\"/>\n                            <label htmlFor=\"q2-fair\">3</label>\n                            <input aria-label=\"3\" type=\"radio\" name=\"wait-time\" id=\"q2-fair\" value=\"fair\"/>\n                            <label htmlFor=\"q2-good\">4</label>\n                            <input aria-label=\"4\" type=\"radio\" name=\"wait-time\" id=\"q2-good\" value=\"good\"/>\n                            <label htmlFor=\"q2-very-good\">5</label>\n                            <input aria-label=\"5\" type=\"radio\" name=\"wait-time\" id=\"q2-very-good\" value=\"very-good\"/>\n                        </td>\n                    </tr>\n                </tbody>\n                <tbody>\n                    <tr>\n                        <td>How would you rate the timeliness of receiving your ballot?</td>\n                        <td>\n                            <label htmlFor=\"q3-very-poor\">1</label>\n                            <input aria-label=\"1\" type=\"radio\" name=\"registration-satisfaction\" id=\"q3-very-poor\" value=\"very-poor\"/>\n                            <label htmlFor=\"q3-poor\">2</label>\n                            <input aria-label=\"2\" type=\"radio\" name=\"registration-satisfaction\" id=\"q3-poor\" value=\"poor\"/>\n                            <label htmlFor=\"q3-fair\">3</label>\n                            <input aria-label=\"3\" type=\"radio\" name=\"registration-satisfaction\" id=\"q3-fair\" value=\"fair\"/>\n                            <label htmlFor=\"q3-good\">4</label>\n                            <input aria-label=\"4\" type=\"radio\" name=\"registration-satisfaction\" id=\"q3-good\" value=\"good\"/>\n                            <label htmlFor=\"q3-very-good\">5</label>\n                            <input aria-label=\"5\" type=\"radio\" name=\"registration-satisfaction\" id=\"q3-very-good\" value=\"very-good\"/>\n                        </td>\n                    </tr>    \n                </tbody>\n                <tbody>\n                    <tr>\n                        <td>How would you rate a potential implementation of online voting?</td>\n                        <td>\n                            <label htmlFor=\"q4-very-poor\">1</label>\n                            <input aria-label=\"1\" type=\"radio\" name=\"polling-satisfaction\" id=\"q4-very-poor\" value=\"very-poor\"/>\n                            <label htmlFor=\"q4-poor\">2</label>\n                            <input aria-label=\"2\" type=\"radio\" name=\"polling-satisfaction\" id=\"q4-poor\" value=\"poor\"/>\n                            <label htmlFor=\"q4-fair\">3</label>\n                            <input aria-label=\"3\" type=\"radio\" name=\"polling-satisfaction\" id=\"q4-fair\" value=\"fair\"/>\n                            <label htmlFor=\"q4-good\">4</label>\n                            <input aria-label=\"4\" type=\"radio\" name=\"polling-satisfaction\" id=\"q4-good\" value=\"good\"/>\n                            <label htmlFor=\"q4-very-good\">5</label>\n                            <input aria-label=\"5\" type=\"radio\" name=\"polling-satisfaction\" id=\"q4-very-good\" value=\"very-good\"/>\n                        </td>\n                    </tr>  \n                </tbody>\n                <tbody>\n                    <tr>\n                        <td>How satisfied are you with the voting timeframe?</td>\n                        <td>\n                            <label htmlFor=\"q5-very-poor\">1</label>\n                            <input aria-label=\"1\" type=\"radio\" name=\"vote-timeframe\" id=\"q5-very-poor\" value=\"very-poor\"/>\n                            <label htmlFor=\"q5-poor\">2</label>\n                            <input aria-label=\"2\" type=\"radio\" name=\"vote-timeframe\" id=\"q5-poor\" value=\"poor\"/>\n                            <label htmlFor=\"q5-fair\">3</label>\n                            <input aria-label=\"3\" type=\"radio\" name=\"vote-timeframe\" id=\"q5-fair\" value=\"fair\"/>\n                            <label htmlFor=\"q5-good\">4</label>\n                            <input aria-label=\"4\" type=\"radio\" name=\"vote-timeframe\" id=\"q5-good\" value=\"good\"/>\n                            <label htmlFor=\"q5-very-good\">5</label>\n                            <input aria-label=\"5\" type=\"radio\" name=\"vote-timeframe\" id=\"q5-very-good\" value=\"very-good\"/>\n                        </td>\n                    </tr>  \n                </tbody>\n                <tbody>\n                    <tr>\n                        <td>How satisfied are you with using directly provided resources?</td>\n                        <td>\n                            <label htmlFor=\"q6-very-poor\">1</label>\n                            <input aria-label=\"1\" type=\"radio\" name=\"resources\" id=\"q6-very-poor\" value=\"very-poor\"/>\n                            <label htmlFor=\"q6-poor\">2</label>\n                            <input aria-label=\"2\" type=\"radio\" name=\"resources\" id=\"q6-poor\" value=\"poor\"/>\n                            <label htmlFor=\"q6-fair\">3</label>\n                            <input aria-label=\"3\" type=\"radio\" name=\"resources\" id=\"q6-fair\" value=\"fair\"/>\n                            <label htmlFor=\"q6-good\">4</label>\n                            <input aria-label=\"4\" type=\"radio\" name=\"resources\" id=\"q6-good\" value=\"good\"/>\n                            <label htmlFor=\"q6-very-good\">5</label>\n                            <input aria-label=\"5\" type=\"radio\" name=\"resources\" id=\"q6-very-good\" value=\"very-good\"/>\n                        </td>\n                    </tr>\n                </tbody>\n                <tbody>\n                    <tr>\n                        <td>Add additional comments or concerns here:</td>\n                        <td>\n                            <label className=\"form-labels\" htmlFor=\"add-comment\">Comments</label>\n                            <textarea aria-label=\"Comment Area\" id=\"add-comment\" rows=\"4\" cols=\"50\"></textarea>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Papa from 'papaparse';\nimport L from 'leaflet';\nimport {Map, TileLayer, GeoJSON} from 'react-leaflet';\nimport hash from 'object-hash'; //for making unique keys\nimport Control from 'react-leaflet-control';\n\n// Component representing the single map to be displayed on the web application\nexport class MyMap extends Component {\n  \n  // Sets the state for the map. Takes in year, focus, and age props. \n  constructor(props){\n    super(props)\n    this.state = {\n      geojsondata: [], \n      data: [],\n      allData: [],\n      targetYear: props.year,\n      targetFocus: props.focus,\n      targetAge: props.age\n    };\n  }\n\n  // Sets a new state when the component will receive props. \n  componentWillReceiveProps(nextProps){\n    this.setState({\n      targetYear: nextProps.year,\n      targetFocus: nextProps.focus,\n      targetAge: nextProps.age\n    })\n  }\n\n    // Sets a new state when the component will updates.\n  componentDidUpdate(prevProps) {\n    if(this.props.year !== prevProps.year || this.props.age !== prevProps.age || this.props.focus !== prevProps.focus){\n      this.setState((currentState, currentProps) => {\n        let returnObject = {\n          targetYear: this.props.year,\n          targetFocus: this.props.focus,\n          targetAge: this.props.age,\n          data: currentState.allData.filter(obj => obj.Age === this.props.age && obj.Year === this.props.year && obj.County !== 'zWashington State')\n        }\n        return returnObject;\n      })\n    }\n  }\n\n  // Is called when the component is mounted. Retrieves geojson data.\n  componentDidMount() {\n    //Retrieve geojson data for county boundaries on the map and pass to state\n    fetch('data/combined.geo.json')\n      .then(response => {\n        let dataPromise = response.json();\n        return dataPromise;\n      })\n      .then( jsonData => {\n        this.setState({\n          geojsondata: jsonData\n        });\n      }); \n\n    // Parse the csv voter data into a JSON object and pass to state\n    let file = \"data/voterparticipation.csv\";\n    Papa.parse(file, {\n      header: true,\n      dynamicTyping: true,\n      download: true,\n      trimHeaders: true,\n      complete: (papaResults) => {\n        let papaData = papaResults.data;\n        let temp = papaData.filter(obj => obj.Age === this.state.targetAge && obj.Year === this.state.targetYear && obj.County !== 'zWashington State');\n        this.setState( {\n          allData: papaData,\n          data: temp\n        });\n      }\n    });\n  }\n\n  //Function for adding style to the geojson data of the map\n  addStyle = (feature) => {\n    let specificCountyData = this.state.data.filter(obj => obj.County === feature.properties.name);\n    return {\n      fillColor: this.getColor(specificCountyData[0][this.state.targetFocus]),\n      weight: 2,\n      opacity: 1,\n      color: 'white',\n      dashArray: '3',\n      fillOpacity: 0.7\n    };\n  }\n\n  //Called by addStyle, this adds color to each geojson county according to it's target value\n  getColor = (d) => {\n    return d > 0.9 ? '#1C3328' :\n    d > 0.8  ? '#2E5442' :\n    d > 0.7  ? '#41765D' :\n    d > 0.6  ? '#539777' :\n    d > 0.5   ? '#65B891' :\n    d > 0.4   ? '#81C4A5' :\n    d > 0.3   ? '#9DD1B9' :\n                '#C7E5D7';\n  }\n\n  //Applies the popup\n  onEachFeature = (feature, layer) => {\n    let specificCountyData = this.state.data.filter(obj => obj.County === feature.properties.name);\n    let targetFocus = Math.round(specificCountyData[0][this.state.targetFocus] * 100);\n    let displayedText = `<h2>${this.state.targetFocus}</h2><b>${feature.properties.name} County</b>\n                        <br />${targetFocus}% of ${this.state.targetAge} year olds in ${this.state.targetYear}`;\n    \n    // Apply layer\n    layer.on({\n      mouseover: function(event) {\n        L.popup()\n            .setLatLng(event.latlng)\n            .setContent(displayedText)\n            .openOn(layer._map);\n      },\n    });\n  }\n\n  // Render Map component. Contains the map and legend as well. \n  render() {\n      let mapViewport = {\n        center: [47.3511, -120.7401],\n        zoom: 6\n      }\n\n      let legend = \n        <div className='info legend'>\n          <i style={{background:\"#C7E5D7\"}}></i>0-30%<br></br>\n          <i style={{background:\"#9DD1B9\"}}></i>30-40%<br></br>\n          <i style={{background:\"#81C4A5\"}}></i>40-50%<br></br>\n          <i style={{background:\"#65B891\"}}></i>50-60%<br></br>\n          <i style={{background:\"#539777\"}}></i>60-70%<br></br>\n          <i style={{background:\"#41765D\"}}></i>70-80%<br></br>\n          <i style={{background:\"#2E5442\"}}></i>80-90%<br></br>\n          <i style={{background:\"#1C3328\"}}></i>90+%<br></br>\n        </div>;\n\n      // Returns a map that contains a legend and and the map itself. This data is layered over the initial tile layer.\n      return (\n          <Map id=\"map\" viewport={mapViewport} style={{ height: '470px' }}>\n            <TileLayer\n              url='https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1Ijoia3lsZWF2YWxhbmkiLCJhIjoiY2pvdzd3NGtzMGgxMjNrbzM0cGhwajRxNyJ9.t8zAjKz12KLZQ8GLp2hDFQ'\n              attribution='Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>'\n              minZoom='1'\n              maxZoom='18'\n              id='mapbox.streets'\n            />\n            {this.state.data.length > 0 ? \n            <GeoJSON ref=\"geojson\" key={hash(this.state.geojsondata)} data={this.state.geojsondata} style={this.addStyle} onEachFeature={this.onEachFeature.bind(this)}/>\n            : \n            <div />}\n            <Control position=\"bottomright\">\n              <div>\n                {legend}\n              </div>\n            </Control>\n          </Map>\n      );\n    }\n  }","import React, { Component } from 'react';\nimport { MyMap } from './MyMap';\n\n// Component representing the container for the map\nexport class MapContainer extends Component {\n    // Sets the state for the map container\n    constructor(props){\n        super(props)\n        this.state = {\n          targetYear: 2008,\n          targetFocus: 'Total Registered Population',\n          targetAge: '18-24'\n        };\n      }\n\n    // Changes the target year on click by taking in a target value \n    clickYear =  (value) => {\n        console.log(value);\n        this.setState({\n            targetYear: parseInt(value)\n        })\n    }\n\n    // Changes the age on click by taking in a target value \n    clickAge =  (value) => {\n        console.log(value);\n        this.setState({\n            targetAge: value\n        })\n    }\n\n    // Changes the focus year on click by taking in a target value \n    clickFocus =  (value) => {\n        console.log(value);\n        this.setState({\n            targetFocus: value\n        })\n    }\n\n    // Renders the map itself and the drop down menues to modify the data being displayed.\n    render() {\n        let buttons = \n        <div id=\"map-options\">\n            <label htmlFor=\"clickYear\">Year</label>\n            <select aria-label=\"Change Year\" id=\"clickYear\"onChange={ (event) => this.clickYear(event.target.value)}>\n                <option value=\"2008\">2008</option>\n                <option value=\"2010\">2010</option>\n                <option value=\"2012\">2012</option>\n                <option value=\"2014\">2014</option>\n                <option value=\"2016\">2016</option>\n            </select>\n\n            <label htmlFor=\"clickAge\">Age</label>\n            <select aria-label=\"Change Age\" id=\"clickAge\"onChange={ (event) => this.clickAge(event.target.value)}>\n                <option value=\"18-24\">18-24</option>\n                <option value=\"25-34\">25-34</option>\n                <option value=\"35-44\">35-44</option>\n                <option value=\"45-54\">45-54</option>\n                <option value=\"55-64\">55-64</option>\n                <option value=\"65-\">65+</option>\n                <option value=\"0TOTAL\">All</option>\n            </select>\n\n            <label htmlFor=\"clickFocus\">Focus</label>\n            <select aria-label=\"Change Year\" id=\"clickFocus\" onChange={ (event) => this.clickFocus(event.target.value)}>\n                <option value=\"Total Registered Population\">Registered Population</option>\n                <option value=\"Total Voter Turnout\">Voter Turnout</option>\n            </select>\n        </div>\n        ;\n        return (\n            <div id=\"map-container\">\n                <h4>WA Voter Registration Data by County</h4>\n                {buttons}\n                <div className=\"map leaflet-container\">\n                    <MyMap year={this.state.targetYear} age={this.state.targetAge} focus={this.state.targetFocus}></MyMap>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport {Pie} from 'react-chartjs-2';\n\n// Component representing a single chart\nexport default class Chart extends Component {\n    // Takes a chartData prop representing data and text prop representing the \"title\" of the chart\n    constructor(props) {\n        super(props);\n        this.state = \n            {chartData: this.props.chartData,\n             text: this.props.text};\n    }\n\n    // Sets data and text of the chart when it receives new props\n    componentWillReceiveProps(nextProps) {\n        this.setState({chartData: nextProps.chartData,\n            text: nextProps.text});  \n    }\n\n    // Returns a single chart\n    render() {\n        return (\n            <Pie\n                data = {{\n                    labels: [\"Very Poor\", \"Poor\", \"Fair\", \"Good\", \"Very Good\"],\n                    datasets: [{\n                        backgroundColor: ['#FC8F6E', '#D7A44A', '#9DB756', '#5EC087', '#3EBEBF'],\n                        data: this.state.chartData[0]\n                    }]\n                }}\n\n                options = {{\n                    title: {\n                        display: true,\n                        text: this.state.text,\n                        fontSize: 20\n                    },\n            \n                    animation: {\n                        animateScale: true,\n                        duration: 1000,\n                    },\n                    legend: {\n                        display: false\n                    },\n            \n                }}\n                width={300} height={300} \n            />\n        )\n    }\n}","import React, { Component } from 'react';\nimport * as Papa from 'papaparse';\nimport Chart from './Chart';\n\n// Component representing the container for all charts to render\nexport default class Charts extends Component {\n    // Takes in a county prop representing the county the user has chosen.\n    constructor(props) {\n        super(props);\n        this.state = {\n            allFeedback: [],\n            overallSatisfaction: [],\n            charts: [],\n            questionNames: [],\n        };\n    }\n\n    // Processes the data and returns an array representing the total response feedback\n    // for each unique location    \n    processResponses(data) {\n        let results = [];\n        data.data.forEach( (entry) => {\n            let contains = false;\n            results.forEach( (location) => {\n                // If the county exists in the results, increment responses\n                if (location.County === entry.County) {\n                    location.Overall_Experience[parseInt(entry.Overall_Experience)-1]++;\n                    location.Convenience[parseInt(entry.Convenience)-1]++;\n                    location.Timely_Ballot[parseInt(entry.Timely_Ballot)-1]++;\n                    location.Online_Voting[parseInt(entry.Online_Voting)-1]++;\n                    location.Timeframe[parseInt(entry.Timeframe)-1]++;\n                    location.Resources[parseInt(entry.Resources)-1]++;\n                    location.Comments.push(entry.Comments);\n                    contains = true;\n                }\n            });\n            // If the given county doesn't exist in results create new entry\n            if (contains === false) {\n                let newLocation = {County: entry.County, \n                    Overall_Experience: [0, 0, 0, 0, 0],\n                    Convenience: [0, 0, 0, 0, 0],\n                    Timely_Ballot: [0, 0, 0, 0, 0],\n                    Online_Voting: [0, 0, 0, 0, 0],\n                    Timeframe: [0, 0, 0, 0, 0],\n                    Resources: [0, 0, 0, 0, 0],\n                    Comments: []\n                };\n                newLocation.Overall_Experience[parseInt(entry.Overall_Experience)-1]++;\n                newLocation.Convenience[parseInt(entry.Convenience)-1]++;\n                newLocation.Timely_Ballot[parseInt(entry.Timely_Ballot)-1]++;\n                newLocation.Online_Voting[parseInt(entry.Online_Voting)-1]++;\n                newLocation.Timeframe[parseInt(entry.Timeframe)-1]++;\n                newLocation.Resources[parseInt(entry.Resources)-1]++;\n                newLocation.Comments.push(entry.Comments);\n                results.push(newLocation);\n            }\n        });\n        return results;\n    }\n    // Takes a data array and obtains and returns an array representing the total \n    // feedback for every polling location in the data\n    getTotalResponse(data) {\n        let results = [1, 1, 1, 1, 1];\n        for (let i=0; i<data.length; i++) {\n            for (let j=0; j<5; j++) {\n                results[j] += data[i].Overall_Experience[j]\n            }\n        }\n        return results;\n    }\n\n    // Takes a data array and name representing the name of the polling location \n    // and returns an index corresponding to that name in the data.\n    getLocationIndex(name) {\n        for (let i=0; i<this.state.allFeedback.length; i++) {\n            let dataUpper = (this.state.allFeedback[i].County).toUpperCase();\n            let nameUpper = (name).toUpperCase();\n            if (dataUpper === nameUpper) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    // Fetches data and sets the state to the data from the csv file once the component is mounted.\n    componentDidMount() {\n        let chartDataCopy = this.state;\n        // Start fetch\n        fetch('data/voter-feedback.csv')\n        // Process the response and return the stream\n        .then(response => {\n            let reader = response.body.getReader();\n            return new ReadableStream({\n                start(controller) {\n                  return pump();\n                  function pump() {\n                    return reader.read().then(({ done, value }) => {\n                      // When no more data needs to be consumed, close the stream\n                      if (done) {\n                          controller.close();\n                          return;\n                      }\n                      // Enqueue the next data chunk into our target stream\n                      controller.enqueue(value);\n                      return pump();\n                    });\n                  }\n                }  \n              })\n            })\n        // Converts to new Response object\n        .then(stream => new Response(stream))\n        // Converts to blob\n        .then(response => response.blob())\n        // Sets all feedback, overallSatisfaction, charts, and questionNames state\n        .then(blob => {\n            let results = \"\";\n            let responses = [];\n            let totalResponses = [];\n            var reader = new FileReader();\n            reader.onload = () => {\n                results = reader.result;\n                responses = this.processResponses(Papa.parse(results, {header: true}));\n                totalResponses = this.getTotalResponse(responses);\n                chartDataCopy.allFeedback = responses;\n                let qNames = Object.keys(this.state.allFeedback[0]); \n                chartDataCopy.questionNames = qNames;\n                chartDataCopy.overallSatisfaction = totalResponses;\n                chartDataCopy.charts.push({data: totalResponses, text: 'Overall Satisfaction'});\n                this.setState(chartDataCopy);\n            };\n            reader.readAsText(blob);\n            return responses;\n        })\n        .catch(error => console.log(error))\n    }\n\n    // Replaces the previous state with 3 new charts of the given county once the component updates (county passed)\n    componentDidUpdate(prevProps) {\n        let chartDataCopy = this.state;\n        if (this.props.county !== prevProps.county && this.props.county !== \"\") {\n            let locationIndex = this.getLocationIndex(this.props.county);\n            let qNames = Object.keys(this.state.allFeedback[locationIndex]); \n            chartDataCopy.overallSatisfaction = this.state.allFeedback[locationIndex][qNames[1]];\n            chartDataCopy.charts[0] = {data: this.state.allFeedback[locationIndex][qNames[1]], text: qNames[1].replace('_', ' ')};\n            chartDataCopy.charts[1] = {data: this.state.allFeedback[locationIndex][qNames[2]], text: qNames[2].replace('_', ' ')};\n            chartDataCopy.charts[2] = {data: this.state.allFeedback[locationIndex][qNames[3]], text: qNames[3].replace('_', ' ')};\n            this.setState(chartDataCopy);\n        }\n    }\n    \n    // Removes chart\n    removeChart(chartIndex) {\n        let chartDataCopy = this.state;\n        chartDataCopy.charts.splice(chartIndex, 1);\n        this.setState(chartDataCopy);\n    }\n\n    // Updates chart\n    updateChart(chart, question) {\n        let chartDataCopy = this.state;  \n        chartDataCopy.charts[chart] = {data: this.state.allFeedback[this.getLocationIndex(this.props.county)][this.state.questionNames[this.state.questionNames.indexOf(question)]], text: this.state.questionNames[this.state.questionNames.indexOf(question)].replace('_', ' ')};\n        this.setState(chartDataCopy);    \n    }\n\n\n    render() {\n        // Options representing the drop down menu the user can choose to display data\n        let options = [];\n        if (this.props.county.length) {\n            for (let j=1; j<7; j++) {\n                if (j === 1) {\n                    options[j - 1] = <option key={j} value={this.state.questionNames[j]}>{this.state.questionNames[j].replace('_', ' ')}</option>\n                }\n                options[j - 1] = <option key={j} value={this.state.questionNames[j]}>{this.state.questionNames[j].replace('_', ' ')}</option>\n            }\n        }\n\n        // Represents charts that will be displayed to the user. Contains a button that the user can use to delete the chart. \n        let charts = this.state.charts.map( (chart) => {\n            return (\n                <div className=\"chart\" key={this.state.charts.indexOf(chart)}>\n                    <div>\n                        {this.props.county.length > 0 ? <select value={chart.text.replace(' ', '_')} onChange={ (event) => {\n                            this.updateChart(this.state.charts.indexOf(chart), event.target.value)\n                        }}>{options}</select> : <div></div>}\n                    </div>\n                    {this.props.county.length > 0 ? <div className=\"input-group-append\">\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={ () => this.removeChart(this.state.charts.indexOf(chart))}>\n                            <span className=\"fa fa-times\" aria-label=\"remove\"></span>\n                        </button>\n                    </div> : <div></div>}\n                    <Chart chartData={[chart.data]} text={chart.text} />\n                </div>);\n        });\n        \n        let stateCopy = this.state;\n        // Returns the charts to be displayed on the application. When the user presses the add chart button, a new \n        // chart is rendered. Add chart is only displayed when the user has inputted a county.\n        return (\n            <div id=\"charts\">\n                <div id=\"charts-header\">\n                {this.props.county.length > 0 ? <button id=\"add-chart\" onClick={ () => {\n                        stateCopy.charts.push({data: this.state.overallSatisfaction, text: 'Overall Experience'});\n                        this.setState(stateCopy);\n                    }}>Add Chart</button>\n                    : <div></div>}\n                </div>\n                <div id=\"charts-container\">\n                    {this.state.charts.length > 0 ? charts : <div></div>}\n                </div> \n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { MapContainer } from './MapContainer';\nimport Charts from './Charts';\n\n// Component that represents the analytics section that contains both the charts and map.\nexport default class Analytics extends Component {\n    // Renders the header, charts, and map container. \n    render() {\n        return (\n            <div id=\"analytics\">\n                <AnalyticsHeader />\n                <div id=\"analytics-container\">\n                    <div id=\"chart-legend\" className=\"legend\">\n                        <Legend />\n                    </div>\n                    <Charts county={this.props.county}/>\n                    <MapContainer></MapContainer>\n                </div>\n            </div>\n        );\n    }\n}\n\n// Legend that corresponds to the charts\nclass Legend extends Component {\n    // Renders the Legend component\n    render() {\n        return (\n            <ul className=\"0-legend\">\n                <li><span id=\"legend1\"></span>Very Poor</li>\n                <li><span id=\"legend2\"></span>Poor</li>\n                <li><span id=\"legend3\"></span>Fair</li>\n                <li><span id=\"legend4\"></span>Good</li>\n                <li><span id=\"legend5\"></span>Very Good</li>\n            </ul>\n        );\n    }\n}\n\n// Header for the analytics section\nclass AnalyticsHeader extends Component {\n    // Renders the header component.\n    render() {\n        return(\n            <div id=\"analytics-header\">\n                <h2>Analytics</h2>\n                <p>Learn more about voter turnout, satisfaction, and feedback.</p>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n\n// Component representing the footer of the web application. This includes contact information and copyrights\nexport default class Footer extends Component {\n    // Renders the Footer component\n    render() {\n        return (\n            <div>\n                <p></p>\n                <p>© 2018 Kyle Avalani, Daniel Lee</p>\n                <p>You can contact Kyle via email <a href=\"mailto:kyleavalani@gmail.com\">here</a>.</p>\n                <p>You can contact Daniel via email <a href=\"mailto:daleewa@gmail.com\">here</a>.</p>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport NavbarFeatures from './Navbar';\n\n// About component that represents information about the web application and is separate from the homepage.\n// The user can navigate to this page to learn more about the web application. \nexport default class About extends Component {\n    // Renders the About component that contains information about the web app and also contains a navigation bar.\n    render() {\n      return (\n        <div id=\"about\">\n            <NavbarFeatures dark={false} light={true}/>\n            <section className=\"about\">\n                <div className=\"content-container\">\n                    <AboutContent />\n                </div>\n            </section>\n        </div>\n      );\n    }\n}\n\n// AboutContent component that represents the content of the about page excluding the navigation bar. \n// This component contains information about the context around the app and also links regarding the\n// data used for the application.\nclass AboutContent extends Component {\n    render() {\n        return (\n            <div>\n                <h1>About</h1>\n                <p>\n                    With the 2018 Midterm Election fast approaching, the importance of registering to vote is\n                    as crucial as ever. Like all elections,\n                    this Midterm election is important. However, with \n                    an <a href=\"http://www.people-press.org/2017/10/05/the-partisan-divide-on-political-values-grows-even-wider/\">increasingly partisan divide</a>\n                    widening between Democrats and Republicans, this election takes special importance.\n                    Currently, the Republicans control the House, Senate, executive branch and with\n                    the recent appointment of Kavanaugh, now the Judiciary branch as well. This Midterm\n                    provides Democrats with a chance to take the House and potentially even the Senate,\n                    and is an critical battle for Republicans if they want to remain in control.\n                </p>\n\n                <p>\n                    Many voters struggle with recognizing the value of their vote. A common sentiment is\n                    \"How does my one vote matter?\". While it may not seem like your individual vote can make the \n                    difference, if everyone shared that sentiment, then it truly wouldn't matter! Additionally, \n                    with races sometimes coming down right to the line, a few votes can make all the difference.\n                    Senator Bernie Sanders once won a mayoral election by a margin of just <a href=\"https://en.wikipedia.org/wiki/Burlington_mayoral_election,_1981\">10 votes</a>.\n                </p>\n\n                <p>\n                    With the flood of \"fake news\" and overall false information during the 2016\n                    Presidential Election, it's clear that many Americans feel there's an abundance\n                    of false information circulating around the Internet. Providing Americans with\n                    facts is vital in ensuring people vote responsibly and with the proper \n                    backing with facts. This task becomes even more crucial with even the President himself\n                    spreading false information, like claims that millions of illegal immigrants\n                    voted in the election.\n                </p>\n\n                <p> &nbsp;&nbsp;&nbsp;&nbsp; This web application addresses a lack of accessible information about voting experiences and voter turnout. \n                    In particular, it aims to give users tools to compare the differences between voter satisfaction and voter turnout in particular counties.\n                    Thus, users can utilize this information to determine how closely voter satisfaction might correlate with voter turnout.\n                </p>\n\n                <h2>Project Data:</h2>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        Voter Registration data from the WA Secretary of state\n                        can be viewed <a href=\"https://www.sos.wa.gov/elections/research/data-and-statistics.aspx\">here </a>\n                        in the \"Voter Participation Excel Spreadsheet\".\n                    </li>\n                    <li className=\"list-group-item\">\n                        Data for voter satisfaction/feedback is originally generated by author (Daniel).\n                    </li>\n                </ul>\n            </div> \n        );\n    }\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'leaflet/dist/leaflet.css';\nimport {} from './style.css';\n\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Introduction from './Introduction';\nimport Start from './Start';\nimport Form from './Form';\nimport Analytics from './Analytics';\nimport Footer from './Footer';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport About from './About';\n\n// Component App that represents the main application and routes to the homepage and about page\n// depending on what the user chooses in the navigation bar. Defaults to the home page\nexport default class App extends Component {\n    // Renders the App component\n    render() {\n        return (\n            <Router basename={process.env.PUBLIC_URL+'/'}>\n                <div>\n                    <Switch>\n                        <Route exact path='/home' component={HomePage} />\n                        <Route path='/about' component={About} />\n                        <Route component={HomePage} /> \n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n}\n\n// Main page for app\nclass HomePage extends Component {\n\n    // County state is used to share the county state between the Start component and the Analytics component\n    // in order to render the chart. \n    constructor(props) {\n        super(props);\n        this.state = {\n            currentCounty: \"\"\n        };\n    }\n\n    // Takes in county name parameter to change the state county\n    chooseCounty(countyName) {\n        this.setState({currentCounty: countyName});\n    }\n    \n    // Renders the HomePage component. Contains the Header, Introduction, Start Form, Main feedback form, Analytics\n    // Section, and footer. \n    render() {\n        return (\n            // Returns components of main\n            <div id=\"main\">\n                <Header />\n                <Introduction />\n                <Start county={this.state.currentCounty} adoptCallback={ (countyName) => this.chooseCounty(countyName)}/>\n                <Form />\n                <Analytics county={this.state.currentCounty}/>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}