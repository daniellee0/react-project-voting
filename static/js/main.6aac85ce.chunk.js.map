{"version":3,"sources":["data/scores.csv","components/About/Navbar.js","components/About/Banner.js","components/About/Header.js","components/About/Footer.js","components/About/About.js","components/Justices/JusticeCard.js","components/Justices/JusticeCardsSection.js","components/Justices/JusticeTimeline.js","components/Justices/CreateTable.js","components/Justices/PickJustice.js","components/Justices/Justices.js","components/VoterFeedback/Start.js","components/VoterFeedback/Form.js","components/VoterFeedback/Map/MyMap.js","components/VoterFeedback/Map/MapContainer.js","components/VoterFeedback/Charts/Chart.js","components/VoterFeedback/Charts/Charts.js","components/VoterFeedback/Analytics.js","components/VoterFeedback/VoteFeedback.js","components/signup/SignUpForm.js","components/signup/SignOutScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavbarFeatures","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","reactstrap_es","dark","light","expand","tag","Link","to","onClick","className","aria-label","navbar","Navbar_NavItems","Component","NavItems","user","firebase","auth","currentUser","id","Banner","react_router_hash_link_lib","Banner_Buttons","Buttons","role","Header","Navbar_NavbarFeatures","Banner_Banner","Footer","_Component","apply","arguments","inherits","createClass","key","value","href","rel","target","alt","About","About_AboutContent","AboutContent","About_InfoCards","src","About_DataCards","InfoCards","DataCards","JusticeCard","Col","sm","md","data","justice_name","es","labels","map","obj","court_term","datasets","label","posterior_mean","borderWidth","borderColor","backgroundColor","color","height","width","options","maintainAspectRatio","responsive","title","display","legend","JusticeCardsSection","context","displayCharts","Grid","Row","JusticeCard_JusticeCard","courtData","filter","handleChange","e","_this2","JusticeTimeline","handleOnChange","event","type","min","max","step","defaultValue","onChange","JusticeTimeline_CreateTimeline","CreateTimeline","_Component2","_getPrototypeOf2","_len","length","args","Array","_key","concat","createGraph","colorArray","dataArray","justiceNames","i","justice","includes","push","j","justiceFilter","getJusticeName","posteriorMeans","k","x","y","createData","name","fill","createLabels","index","position","CreateTable","react_bootstrap_table_lib","striped","hover","pagination","isKey","dataField","dataSort","delay","numberComparators","PickJustice","checkbox","checked","ref","database","stateCopy","indexState","indexOf","splice","keys","forEach","justiceName","undefined","child","remove","forceUpdate","loggedIn","justiceRef","on","snapshot","val","values","off","Justices","Justices_JusticeContent","PickJustice_PickJustice","JusticeTimeline_JusticeTimeline","CreateTable_CreateTable","components_About_Footer","JusticeContent","JusticeCardsSection_JusticeCardsSection","Start","Start_StartForm","adoptCallback","StartForm","county","callBack","htmlFor","placeholder","Form","postForm","form","leaning","satisfaction","participation","mail","online","alreadySubmitted","successfulSubmit","preventDefault","uid","newFeedback","feedbackRef","foundUser","feedback","Form_Table","updateFeedback","Table","Form_LeanQuestion","Form_ExperienceQuestion","Form_ParticipateQuestion","Form_ConvenienceQuestion","Form_OnlineQuestion","LeanQuestion","ExperienceQuestion","ParticipateQuestion","ConvenienceQuestion","OnlineQuestion","MyMap","getSpecificCountyData","geojsondata","features","properties","addStyle","feature","specificCountyData","County","fillColor","getColor","targetFocus","weight","opacity","dashArray","fillOpacity","d","addSpecificStyling","onEachFeature","layer","mouseover","Math","round","displayedText","targetAge","targetYear","countyInfoPopup","click","mapRef","fitBounds","getBounds","homeCountyGeojson","allData","year","focus","age","nextProps","prevProps","currentState","currentProps","Age","Year","_this3","refs","leafletElement","fetch","then","response","json","jsonData","listLocal","listOfCounties","Papa","parse","header","dynamicTyping","download","trimHeaders","complete","papaResults","papaData","temp","style","background","Map","viewport","center","zoom","TileLayer","url","attribution","minZoom","maxZoom","GeoJSON","hash","control_default","MapContainer","clickYear","console","log","parseInt","clickAge","clickFocus","buttons","MyMap_MyMap","Chart","chartData","text","fontSize","animation","animateScale","duration","Charts","allFeedback","overallSatisfaction","charts","questionNames","textNames","updateChart","results","entry","totalResponses","getOverallSatisfaction","processResponses","chartIndex","chartDataCopy","chart","question","newChart","removeChart","Chart_Chart","Analytics","Analytics_AnalyticsHeader","Analytics_Legend","Charts_Charts","submittedForm","MapContainer_MapContainer","Legend","AnalyticsHeader","VoteFeedback","currentCounty","countyName","Start_Start","chooseCounty","Form_Form","submitForm","Analytics_Analytics","SignUpForm","email","password","handle","avatar","errorMessage","createUserWithEmailAndPassword","createdUser","updateProfile","displayName","photoURL","catch","message","signInWithEmailAndPassword","_this4","signOut","_this5","authUnRegFunc","onAuthStateChanged","loading","field","changes","handleSignUp","handleSignIn","_this6","content","Header_Header","About_About","handleSignUpButton","handleSignInButton","SignOutScreen","window","setTimeout","location","App","BrowserRouter","basename","process","Switch","Route","exact","path","component","HomePage","render","Justices_Justices","assign","Boolean","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","require","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6aac85ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/scores.04d2db7f.csv\";","import React, { Component } from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport firebase from 'firebase/app';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    Nav,\n    NavItem,\n    NavLink,\n    NavbarBrand} from 'reactstrap';\n\n// Comonent representing the navigation bar so the user can navigate the web application.\nexport default class NavbarFeatures extends Component {\n    // Constructor sets state for navigation\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false,\n        };\n    }\n    \n    // Changes the state isOpen on toggle.\n    toggle() {\n        this.setState({\n        isOpen: !this.state.isOpen\n        });\n    }\n\n\n    // Renders the navigation bar with options to navigate to Home, About, and to get started. \n    render() {\n        return (\n            <nav>\n                <Navbar dark={this.props.dark} light={this.props.light} expand=\"md\">\n                <NavbarBrand tag={Link} to=\"/\">VoteFact</NavbarBrand>\n                <NavbarToggler onClick={this.toggle} className=\"mr-2\" aria-label=\"Navbar Toggle\"/>\n                <Collapse isOpen={this.state.isOpen} navbar>\n                    <NavItems />\n                </Collapse>\n                </Navbar>\n            </nav>\n        );\n    }\n}\n\n// Component that represents the navigation bar items. These items can be clicked on and the user will be navigated to\n// the various paths. \nclass NavItems extends Component {\n\n    render() {\n        let user = firebase.auth().currentUser;\n\n        return(\n            <Nav navbar className=\"ml-auto\">\n                <NavItem>\n                    <NavLink tag={Link} to=\"/votefeedback\">Feedback</NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink tag={Link} to=\"/justices\">Justices</NavLink>\n                </NavItem>\n                {!user ? <NavItem>\n                            <NavLink tag={Link} to=\"/signin\">Sign In</NavLink>\n                        </NavItem> : <div></div>}\n                {user ? <NavItem>\n                            <NavLink id=\"signout\" tag={Link} to=\"/signout\">Sign Out</NavLink>\n                        </NavItem> : <div></div>}\n            </Nav>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\n\n// Component representing the banner of the web app\nexport default class Banner extends Component {\n    render() {\n      return (\n        // Made up of the main banner and navigating buttons\n        <div id=\"banner\">\n            <h1><Link to=\"/home\">VoteFact</Link></h1>\n            <p>A review and analytics platform for voters to learn and track justices, voter turnout, and leave feedback</p>\n            <Buttons />\n        </div>\n      );\n    }\n}\n\n// Component representing the buttons for the the main banner. THese buttons link to\n// the start section and the about page.\nclass Buttons extends Component {\n  render() {\n    return(\n      <div id=\"banner-buttons\">\n        <Link to=\"/votefeedback\" role=\"button\" id=\"learn-button\">Feedback</Link>\n        <Link to=\"/justices\" role=\"button\" id=\"learn-button\">Justices</Link>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport NavbarFeatures from './Navbar';\nimport Banner from './Banner';\n\n// Represents the Header of the app\nexport default class Header extends Component {\n  render() {\n    return (\n      // Passes in dark and light prop to navbarfeatures to indicate the styling of the navbar\n      <header>\n        <NavbarFeatures dark={true} light={false}/>\n        <Banner />\n      </header>\n    );\n  }\n}","import React, { Component } from 'react'; //import React Component\nimport 'font-awesome/css/font-awesome.min.css';\nimport \"./Footer.scss\"\n\n// Component that represents the footer. Contains email and copyright information.\nexport class Footer extends Component {\n    // Render function for the footer. Displays various email and copyright information.\n    render() {\n        return (\n            <footer>\n                <p>Contact us! E-mail for serious inquires: <a aria-label=\"Email\" href=\"mailto:votefact340@gmail.com\" rel=\"noopener noreferrer\" target=\"_blank\" ><i aria-label=\"Email\" className=\"fa fa-envelope-o fa-1x\" alt=\"email link\"></i></a></p>    \n                <p>Data from Kaggle: <a aria-label=\"Justice data\" href=\"https://www.kaggle.com/umichigan/court-justices\"><i aria-label=\"Justice data\" className=\"fa fa-database fa-1x\" ></i></a> \n                    &nbsp;and the WA Secretary of State: <a aria-label=\"Election data\" href=\"https://www.sos.wa.gov/elections/research/data-and-statistics.aspx\"><i aria-label=\"Election data\" className=\"fa fa-university fa-1x\" ></i></a>\n                </p>\n                <p>&copy; Copyright 2018 Kyle Avalani, Daniel Lee, Andrea Koozer, Hilton Vo</p>\n            </footer>\n        )\n    }\n}\n\nexport default Footer;","import React, { Component } from 'react';\n\n// About component that represents information about the web application and is separate from the homepage.\n// The user can navigate to this page to learn more about the web application. \nexport default class About extends Component {\n    // Renders the About component that contains information about the web app and also contains a navigation bar.\n    render() {\n      return (\n        <div id=\"intro\"className=\"about\">\n            <section className=\"about\">\n                <div className=\"content-container\">\n                    <AboutContent />\n                </div>\n            </section>\n        </div>\n      );\n    }\n}\n\n// AboutContent component that represents the content of the about page excluding the navigation bar. \n// This component contains information about the context around the app and also links regarding the\n// data used for the application.\nclass AboutContent extends Component {\n    render() {\n        return (\n            <div id=\"aboutContent\">\n                <InfoCards />\n                <p>\n                    &nbsp;&nbsp;&nbsp;&nbsp; With the 2018 Midterm Election still in the political spotlight, the importance of registering to vote is\n                    as crucial as ever. Like all elections,\n                    this Midterm election is important. However, with \n                    an <a href=\"http://www.people-press.org/2017/10/05/the-partisan-divide-on-political-values-grows-even-wider/\">increasingly partisan divide </a> \n                    widening between Democrats and Republicans, this election takes special importance.\n                </p>\n\n                <p>\n                    &nbsp;&nbsp;&nbsp;&nbsp; With the flood of \"fake news\" and overall false information during the 2016\n                    Presidential Election, it's clear that many Americans feel there's an abundance\n                    of false information circulating around the Internet. Providing Americans with\n                    facts is vital in ensuring people vote responsibly and with the proper \n                    backing with facts. This task becomes even more crucial with even the President himself\n                    spreading false information, like claims that millions of illegal immigrants\n                    voted in the election.\n                </p>\n\n                <p> &nbsp;&nbsp;&nbsp;&nbsp; This web application addresses a lack of accessible information about voting experiences and voter turnout. \n                    In particular, it aims to give users tools to compare the differences between voter satisfaction and voter turnout in particular counties.\n                    Thus, users can utilize this information to determine how closely voter satisfaction might correlate with voter turnout.\n                </p>\n\n                <img className=\"infographic\" src=\"./img/infographic.png\" alt=\"infographic of voting process\"></img>\n                <h2>Project Data:</h2>\n                <DataCards />\n            </div> \n        );\n    }\n}\n\n// InfoCards component that represents information about the app\nclass InfoCards extends Component {\n    // Render function for the InfoCards Component that will display the cards.\n    render() {\n        return (\n            <div className=\"cards\">\n                <div>\n                    <i className=\"fas fa-pencil-alt fa-3x\"></i>\n                    <p>Leave a meaningful review about your voting experience. Whether you're on the go, or at home, VoteFact provides you with access everywhere.</p>\n                </div>\n                <div>\n                    <i className=\"far fa-user fa-3x\"></i>                    \n                    <p>Review analytics about voter satisfaction in your local county. Government entities can utilize this data to develop comprehensive solutions</p>\n                </div>\n                <div>\n                    <i className=\"fas fa-chart-bar fa-3x\"></i>\n                    <p>Analyze Washington State voter registration and turnout data through an interactive map. Filter by year and age to see how the data changes.</p>\n                </div>\n                <div>\n                    <i className=\"fa fa-gavel fa-3x\"></i>\n                    <p>Your votes affect who gets put on the Supreme Court! Review analytics about the ideologies of Supreme Court Justices.</p>\n                </div>\n            </div>\n        );\n    }\n}\n\n// Datacards component that represents where the data came from\nclass DataCards extends Component {\n    // Render function for the DataCards component. Displays where data came from.\n    render() {\n        return (\n            <div className=\"cards datacards\">\n                <div>\n                    <i className=\"fa fa-gavel fa-3x\"></i>\n                    <p>\n                        Supreme Court ideology data (1937 - 2015) from the University of Michigan can be viewed \n                        <a href=\"https://www.kaggle.com/umichigan/court-justices\"> here</a>.\n                    </p>\n                </div>\n                <div>\n                    <i className=\"fa fa-university fa-3x\"></i>\n                    <p>\n                        Voter Registration data from the WA Secretary of State can be\n                            viewed <a href=\"https://www.sos.wa.gov/elections/research/data-and-statistics.aspx\">here </a>\n                        under \"Voter Participation\".\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\n//Component that represents a single justice card within a grid\nexport default class JusticeCard extends Component {\n    render() {\n        return (\n            <Col sm={12} md={6}>\n                <h3 id=\"h3\">{this.props.data[0].justice_name}</h3>\n\n                {/* Makes the line graph */}\n                <Line\n                    data={{\n                        labels: this.props.data.map( (obj) => obj.court_term),\n                        datasets: [{\n                            label: \"Posterior Mean\",\n                            data: this.props.data.map( (obj) => obj.posterior_mean),\n                            borderWidth: 3,\n                            borderColor: \"gray\",\n                            backgroundColor: this.props.color\n                        }]}}\n                    height={300}\n                    width={500}\n                    options={{\n                        maintainAspectRatio: true,\n                        responsive: true,\n                        title: {\n                            display: false,\n                        },\n                        legend: {\n                            display: false,\n                        }\n                    }}\n                />\n            </Col>\n        )\n    }\n}","import React, { Component } from 'react';\nimport JusticeCard from './JusticeCard';\nimport { Grid, Row } from 'react-bootstrap';\n\n//Component that renders all of the current Justices at the beginning of the application\nexport default class JusticeCardsSection extends Component {\n    //Takes in the scores.csv file as a prop\n    constructor(props, context) {\n        super(props, context);\n    \n        this.handleChange = this.handleChange.bind(this);\n        \n        //Initializes the value to three (meaning that it displays all current justices by default) \n        this.state = {\n          value: 3\n        };\n      }\n\n      //Chooses which of the current justices to display based on the button that was pushed\n      displayCharts = () => {\n          if (this.state.value === 3) {\n              return (\n                <Grid>\n                    <Row className=\"show-grid\">\n                        <JusticeCard color={\"#F6CDC8\"} data={this.props.courtData.filter( (obj) => obj.justice_name === \"John Roberts\")} />\n                        <JusticeCard color={\"#F6CDC8\"} data={this.props.courtData.filter( (obj) => obj.justice_name === \"Samuel Alito\")} />\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <JusticeCard color={\"#BEDBFE\"} data={this.props.courtData.filter( (obj) => obj.justice_name === \"Stephen Breyer\")} />\n                        <JusticeCard color={\"#BEDBFE\"} data={this.props.courtData.filter( (obj) => obj.justice_name === \"Ruth Bader Ginsburg\")} />\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <JusticeCard color={\"#BEDBFE\"} data={this.props.courtData.filter( (obj) => obj.justice_name === \"Elena Kagan\")} />\n                        <JusticeCard color={\"#BEDBFE\"} data={this.props.courtData.filter( (obj) => obj.justice_name === \"Sonia Sotomayor\")} />\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <JusticeCard color={\"#F6CDC8\"} data={this.props.courtData.filter( (obj) => obj.justice_name === \"Clarence Thomas\")} />\n                    </Row>\n                </Grid>\n            ) \n          } else if (this.state.value === 2) {\n              return (\n                <Grid>\n                    <Row className=\"show-grid\">\n                        <JusticeCard color={\"#BEDBFE\"} data={this.props.courtData.filter( (obj) => obj.justice_name === \"Stephen Breyer\")} />\n                        <JusticeCard color={\"#BEDBFE\"} data={this.props.courtData.filter( (obj) => obj.justice_name === \"Ruth Bader Ginsburg\")} />\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <JusticeCard color={\"#BEDBFE\"} data={this.props.courtData.filter( (obj) => obj.justice_name === \"Elena Kagan\")} />\n                        <JusticeCard color={\"#BEDBFE\"} data={this.props.courtData.filter( (obj) => obj.justice_name === \"Sonia Sotomayor\")} />\n                    </Row>\n                </Grid>\n              )\n          } else {\n              return (\n                <Grid>\n                <Row className=\"show-grid\">\n                    <JusticeCard color={\"#F6CDC8\"} data={this.props.courtData.filter( (obj) => obj.justice_name === \"John Roberts\")} />\n                    <JusticeCard color={\"#F6CDC8\"} data={this.props.courtData.filter( (obj) => obj.justice_name === \"Samuel Alito\")} />\n                </Row>\n                <Row className=\"show-grid\">\n                    <JusticeCard color={\"#F6CDC8\"} data={this.props.courtData.filter( (obj) => obj.justice_name === \"Clarence Thomas\")} />\n                </Row>\n            </Grid>\n              )\n          }\n      }\n      \n      handleChange(e) {\n        this.setState({ value: e });\n      }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <h2 id=\"h2\">Change in Ideology of Current Justices</h2>\n                    <p id=\"alert\">\n                        Note: Justices Neil Gorsuch and Brett Kavanaugh are not listed under current justices because the dataset that provides the\n                        \"Martin-Quinn\" scores only goes until 2015.\n                    </p>\n                    <p id=\"p\" className=\"justiceInfo\">\n                        &nbsp;&nbsp;&nbsp;&nbsp; Developed by Andrew D. Martin (University of Michigan, College of Literature, Science, and the Arts) and Kevin M. Quinn \n                        (Department of Political Science, University of Michigan), \"Martin-Quinn\" scores measure each justice's political leanings \n                        on a left-right political spectrum. These scores are based on the voting record and written opinion of the justices as well \n                        as other factors such as their speeches and the political climate when they were appointed. The graphs below portray how \n                        each justice's ideology shifts over time. Higher positive numbers represent more conservative beliefs while higher negative \n                        numbers correspond to more liberal beliefs. \n                    </p>\n                </div>\n\n                <br/>\n                \n                {/* Renders a group of three buttons */}\n                <div className=\"btn-group\">\n                    <Grid>\n                        <Row>\n                            <button id=\"republican\" value={1} onClick={ () => {\n                                    this.setState({ value: 1 })\n                                }}>\n                                <h3 id=\"h3\">Republican Justices</h3>\n                            </button>\n                            <button id=\"democrat\" value={2} onClick={ () => {\n                                    this.setState({ value: 2 })\n                                }}>\n                                <h3 id=\"h3\">Democratic Justices</h3>\n                            </button>\n                            <button id=\"neutral\" value={3} onClick={ () => {\n                                    this.setState({ value: 3 })\n                                }}>\n                                <h3 id=\"h3\">All Justices</h3>\n                            </button>\n                        </Row>\n                    </Grid>\n                </div>\n\n                <br/>\n\n                {/* Calls the displayCharts() method to determine which justices to display */}\n                {this.displayCharts()}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\n\n//Component that creates the slider and timeline of change in ideology\nexport default class JusticeTimeline extends Component {\n    //Takes in scores.csv as a prop\n    constructor(props, context) {\n      super(props, context)\n      this.state = {\n        value: 1960,\n        courtData: this.props.courtData.filter( (obj) => {\n            return obj.court_term >= 1937 && obj.court_term <= 1960;\n        })\n      }\n    }\n    \n    //Sets the state when the slider is changed to update the value of the slider\n    handleOnChange = (event) => {\n        this.setState({\n            value: event.target.value, \n            courtData: this.props.courtData.filter( (obj) => {\n                return obj.court_term >= 1937 && obj.court_term <= this.state.value;\n            })\n        });\n    }\n   \n    render() {\n      return (\n          <div>\n            <p id=\"alert\" className=\"mobile\">\n                Tilt your mobile device horizontally to make the timeline and graph show up better.\n            </p>\n            <h2>Timeline of Ideology</h2>\n            <h4>1937 - {this.state.value}</h4>\n\n            {/* This renders the slider */}\n            <input type=\"range\" min=\"1937\" max=\"2015\" step=\"1\" defaultValue={this.state.value} onChange={this.handleOnChange} className=\"slider\"></input>\n            \n            <br/> \n            <br/>\n            <br/>\n            <CreateTimeline courtData={this.state.courtData} />\n          </div>\n      )\n    }\n  }\n\n  //Component that creates the timeline based on the value in the slider\n  export class CreateTimeline extends Component {\n    //Creates an array of objects that is used as the dataset for the timeline\n    createGraph = () => {\n        //Hardcode an array of colors used for the timeline\n        var colorArray = ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6', \n        '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',\n        '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', \n        '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',\n        '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC', \n        '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',\n        '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680', \n        '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',\n        '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3', \n        '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'];\n\n        let dataArray = [];\n\n        //Creates an array of all the justice names in the time period\n        let justiceNames = [];\n        for (var i = 0; i < this.props.courtData.length; i++) {\n            let justice = this.props.courtData[i].justice_name\n            if (!justiceNames.includes(justice)) {\n                justiceNames.push(justice);\n            }\n        }\n\n        //Loops through the dataset to create an array of objects (one object for each justice)\n        for (var j = 0; j < justiceNames.length; j++) {\n            //Filters the dataset for the particular justice name\n            let justiceFilter = this.getJusticeName(j, justiceNames);\n\n            //Gets an array of all the posterior means (ideology scores) for that justice\n            let posteriorMeans = [];\n            for (var k = 0; k < justiceFilter.length; k++) {\n                let obj = {};\n                obj.x = justiceFilter[k].court_term;\n                obj.y = justiceFilter[k].posterior_mean;\n                posteriorMeans.push(obj);\n            }\n            dataArray.push(createData(posteriorMeans, justiceFilter[0].justice_name, colorArray[j]));\n        }\n        \n        //Creates an object with a label of the justice name and data of the posterior means\n        function createData(posteriorMeans, name, color) {\n            return {\"label\" : name, \"data\" : posteriorMeans, \"borderColor\" : color, \"borderWidth\" : 3, \"fill\" : false};\n        }\n\n        return dataArray;\n    }\n\n    getJusticeName(index, justiceNames) {\n        let justiceFilter = this.props.courtData.filter( (obj) => {\n            return obj.justice_name === justiceNames[index]}\n        );\n        return justiceFilter;\n    }\n\n    //Creates an array of the court terms (this is used for the x-axis labels)\n    createLabels = () => {\n        let labels = []\n\n        for (var i = 0; i < this.props.courtData.length; i++) {\n            if (!labels.includes(this.props.courtData[i].court_term)) {\n                labels.push(this.props.courtData[i].court_term);\n            }\n        }\n\n        return labels;\n    }\n\n\n    render() {\n        return(\n            //Creates the timeline\n            <Line\n                data={{\n                    datasets: this.createGraph(),\n                    labels: this.createLabels()\n                }}\n                height={300}\n                width={500}\n                options={{\n                    maintainAspectRatio: true,\n                    responsive: true,\n                    title: {\n                        display: false,\n                    },\n                    legend: {\n                        display: true,\n                        position: \"top\"\n                    }\n                }}\n            />\n        )\n    }\n  }","import React, { Component } from 'react';\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\nimport '../../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\n\n//Comonent that creates the interactive table \nexport default class CreateTable extends Component {\n    render() {\n        this.data = this.props.courtData;\n        return(\n            <div>\n                <h2>Justice Table Search</h2>\n                <BootstrapTable data={this.data} striped hover pagination>\n                    <TableHeaderColumn isKey dataField='justice_code' dataSort={true}>Justice Code</TableHeaderColumn>\n                    <TableHeaderColumn dataField='justice_name' dataSort={true} filter={{type: 'TextFilter', delay: 750}}>Justice Name</TableHeaderColumn>\n                    <TableHeaderColumn dataField='court_term' dataSort={true}\n                        filter={{ \n                            type: 'NumberFilter', \n                            delay: 750, \n                            numberComparators: [ '=', '>', '<', '>=', '<=' ]}}\n                    >Term</TableHeaderColumn>\n                    <TableHeaderColumn dataField='posterior_mean' dataSort={true}\n                        filter={{ \n                            type: 'NumberFilter',\n                            delay: 750, \n                            numberComparators: [ '=', '>', '<', '>=', '<=' ]}}\n                    >Post. Mean</TableHeaderColumn>\n                    <TableHeaderColumn dataField='standard_deviation' dataSort={true}\n                        filter={{ \n                            type: 'NumberFilter', \n                            delay: 750, \n                            numberComparators: [ '=', '>', '<', '>=', '<=' ]}}\n                    >Std. Dev</TableHeaderColumn>\n                    <TableHeaderColumn dataField='posterior_median' dataSort={true}\n                        filter={{ \n                            type: 'NumberFilter', \n                            delay: 750, \n                            numberComparators: [ '=', '>', '<', '>=', '<=' ]}}\n                    >Post. Median</TableHeaderColumn>\n                </BootstrapTable>\n            </div>)\n    }\n  }","import React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport JusticeCard from './JusticeCard';\nimport { Grid, Row } from 'react-bootstrap';\nimport { HashLink as Link } from 'react-router-hash-link';\n\n// Component that represents the user picking a particular justice. Users can compare justices be selecting them.\nexport default class PickJustice extends Component {\n    //Takes in scores.csv as a prop and creates a state to keep track of the justices \n    //selected and their keys in Firebase\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            value: [],\n            keys: {}\n        }\n    }\n\n    //Sets the data from Firebase in the state when the page loads\n    componentDidMount() {\n        let stateCopy = this.state;\n        this.justiceRef = firebase.database().ref(\"Justices\")\n        this.justiceRef.on(\"value\", (snapshot) => {\n            if (snapshot.val() != null) {\n                this.setState({ value: Object.values(snapshot.val()) });\n                for (var i = 0; i < Object.values(snapshot.val()).length; i++) {\n                    let name = Object.values(snapshot.val())[i]\n                    let key = Object.keys(snapshot.val())[i]\n                    stateCopy.keys[name] = key\n                }\n            }\n        });\n        this.setState(stateCopy);\n    }\n\n    // When the component unmounts, remove the reference. \n    componentWillUnmount() {\n        this.justiceRef.off();\n    }\n\n    //Creates an array of all the justice names in the time period\n    justiceNames = () => {\n        let justiceNames = [];\n        for (var i = 0; i < this.props.courtData.length - 1; i++) {\n            let justice = this.props.courtData[i].justice_name\n            if (!justiceNames.includes(justice)) {\n                justiceNames.push(justice);\n            }\n        }\n        return justiceNames\n    }\n\n    //Creates the check boxes and their functionality\n    checkbox = () => {\n        return this.justiceNames().map( (name) => {\n            return (\n                <label className=\"checkbox-inline\" key={name}><input type=\"checkbox\" value={name} \n                                checked={this.state.value.includes(name)} onChange={ () => {\n                    let ref = firebase.database().ref(\"Justices\");\n                    let stateCopy = this.state;\n                    //Adds and removes the name from Firebase (and updates state)\n                    if (this.state.value.includes(name)) {\n                        let indexState = this.state.value.indexOf(name);\n                        this.state.value.splice(indexState, 1)\n\n                        //Finds the key in Firebase for the name\n                        let key;\n                        Object.keys(this.state.keys).forEach( (justiceName) => {\n                            if (justiceName === name) {\n                                key = this.state.keys[name]\n                            }\n                        })\n                        \n                        //Removes the key from state\n                        for (var i = 0; i < Object.keys(this.state.keys).length; i++) {\n                            if (Object.keys(this.state.keys)[i] === name) {\n                                delete this.state.keys[name]\n                            }\n                        }\n\n                        //Removes the name from Firebase\n                        if (key.key === undefined) {\n                            ref.child(key).remove()\n                        } else {\n                            ref.child(key.key).remove()\n                        }\n\n                    } else {\n                        //Adds the name to Firebase if it wasn't already there\n                        this.state.value.push( name);\n                        let key = ref.push(name).key;\n                        stateCopy.keys[name] = {key};\n                        this.setState(stateCopy);\n                    }\n                    \n                    //Re-renders the application to show updated charts\n                    this.forceUpdate()\n                }}/>{name} &nbsp;&nbsp;&nbsp;</label>\n            )\n        })\n    }\n\n    //Creates a chart for evey name that is stored in the state's value prop\n    displayCharts = () => {\n        return this.state.value.map( (name) => \n            <JusticeCard key={name} color={\"#eaedf2\"} data={this.props.courtData.filter( (obj) => obj.justice_name === name)} />\n        )\n    }\n\n    loggedIn = () => {\n        let user = firebase.auth().currentUser;\n        if (user) {\n            return (\n                <div>\n                    {this.checkbox()}\n                    <Grid>\n                        <Row>\n                            {this.displayCharts()}\n                        </Row>\n                    </Grid>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <p>In order to see and use this function you must be logged in.</p>\n                    <Link to=\"/signin\"><button className=\"login-button\">Login</button></Link>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Justices 1937 - 2015</h2>\n                <p>\n                    Look up justices you know and like. Research new ones. Compare justices. Click on whichever \n                    justice you desire to see how their ideology has shifted over time! \n                </p>\n                {this.loggedIn()}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport NavbarFeatures from '../About/Navbar';\nimport JusticeCardsSection from './JusticeCardsSection';\nimport JusticeTimeline from './JusticeTimeline';\nimport CreateTable from './CreateTable';\nimport Footer from '../About/Footer'\nimport PickJustice from './PickJustice';\n\n// Component that represents all of the charts that use the Justice Ideology Scores\nexport default class Justices extends Component {\n    render() {\n        return (\n            <div id=\"about\">\n                <NavbarFeatures dark={false} light={true}/>\n                <section className=\"about\">\n                    <div className=\"content-container\">\n                        <JusticeContent courtData={this.props.courtData}/>\n                        <PickJustice courtData={this.props.courtData}/>\n                        <JusticeTimeline courtData={this.props.courtData} />\n                        <CreateTable courtData={this.props.courtData} />\n                        <Footer />\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\n// Component that introduces the ideology scores\nexport class JusticeContent extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Ideology of the Supreme Court</h1>\n                <p className=\"justiceInfo\">\n                    &nbsp;&nbsp;&nbsp;&nbsp; The Supreme Court of the United States of America is comprised of nine justices who were appointed by presidents with\n                    different political ideologies. Therefore, the justices represent a wide range of political beliefs. Supreme Court Justices \n                    appointed for life so they can focus on the US Constitution instead of pleasing the people that will support them for \n                    re-election.\n                </p>\n                <JusticeCardsSection courtData={this.props.courtData} />\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\n// Component representing the Start component of the web application. Here, the user can input their County\n//to then  display the corresponding pie charts. \nexport default class Start extends Component {\n\n    // Renders a the start/get started and once the user presses the begin button, the county state changes\n    // and this is used to display charts for a specific county.\n    render() {\n        return (\n            <div id=\"get-started\">\n                <h2>Enter the Name of your County</h2>\n                <p>Get started by simply following the provided instructions</p>\n                <StartForm adoptCallback={this.props.adoptCallback}/>\n            </div>\n        );\n    }\n}\n\n// Component that represents the form to enter in their county and have it displayed on the map\nclass StartForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {county: \"\"};\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    // Changes the county state of the App component.\n    handleChange(event) {\n        let callBack = this.props.adoptCallback;\n        callBack(event.target.value);\n    }\n\n    // Renders the component. \n    render() {\n        return (\n            <form>\n                <div id=\"name-input\">\n                    <label className=\"form-labels\" htmlFor=\"name\">County</label>\n                    <input aria-label=\"Input County\" type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name\" onChange={this.handleChange}/>\n                </div>\n            </form>\n        );\n    }\n}","import React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport { Alert } from 'reactstrap';\nimport { HashLink as Link } from 'react-router-hash-link';\n\n// Component representing the different questions and options the user can select to provide feedback\nexport default class Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {leaning: '', satisfaction: '', participation: '', mail: '', online: '', alreadySubmitted: false, successfulSubmit: false};\n    }\n\n    //when the text in the form changes\n    updateFeedback(value, type) {\n        let stateCopy = this.state;\n        stateCopy[type] = value;\n        this.setState(stateCopy);\n    }\n\n    // Posts the form to the database\n    postForm(event){\n        event.preventDefault(); //don't submit\n        let user = firebase.auth().currentUser.uid;\n        let newFeedback = {\n            leaning: this.state.leaning,\n            satisfaction: this.state.satisfaction,\n            participation: this.state.participation,\n            mail: this.state.mail,\n            online: this.state.online,\n            user: user\n        };\n        this.feedbackRef = firebase.database().ref('feedback');\n        let foundUser = false;\n        this.feedbackRef.on('value', (snapshot) => {\n            let feedback = snapshot.val();\n            Object.keys(feedback).forEach( (key) => {\n                if (feedback[key].user === user) {\n                    foundUser = true;\n                }\n            });\n        });\n        let stateCopy = this.state;\n        // If the user exists, do not post to the database.\n        if (!foundUser) {\n            firebase.database().ref('feedback').push(newFeedback);\n            stateCopy.successfulSubmit = true;\n        } else {\n            stateCopy.alreadySubmitted = true; \n        }\n        this.setState(stateCopy);\n    }\n\n    // Hide functionality until the user is logged in. User cannot submit until they are logged in.\n    loggedIn = () => {\n        let user = firebase.auth().currentUser;\n        if (user) {\n            return (\n                <div id=\"submit-feedback\">\n                    <button onClick={(e) => this.postForm(e)} form=\"form\">Submit</button>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <p>You must be logged in to submit a form!</p>\n                    <Link to=\"/signin\"><button className=\"login-button\">Login</button></Link>\n                </div>\n            )\n        }\n    }\n\n    // Renders the Form component. Contains the table that represents the feedback form.\n    render() {\n        return (\n            <div id=\"form\">\n                <h2>Feedback Form</h2>\n                <p>Anonymously answer the following questions about your voting experience</p>\n                <p>Survey Scale: 1=Very Poor, 5=Very Good</p>\n                <Table adoptCallback={(value, type) => this.updateFeedback(value, type)}/>\n                {this.loggedIn()}\n                {this.state.alreadySubmitted === true ? <Alert color=\"danger\">You already submitted feedback!</Alert> : <div />}\n                {this.state.successfulSubmit === true ? <Alert color=\"primary\">You successfully submitted!</Alert> : <div />}\n            </div>\n        );\n    }\n}\n\n// Table component that represents the main feedback form. Users can choose multiple choice options\n// and then submit the form.\nclass Table extends Component {\n\n    // Renders the main feedback form (Table).\n    render() {\n        return(\n            <table>\n                <tbody><LeanQuestion adoptCallback={this.props.adoptCallback} /></tbody>\n                <tbody><ExperienceQuestion adoptCallback={this.props.adoptCallback} /></tbody>\n                <tbody><ParticipateQuestion adoptCallback={this.props.adoptCallback} /></tbody>\n                <tbody><ConvenienceQuestion adoptCallback={this.props.adoptCallback} /></tbody>\n                <tbody><OnlineQuestion adoptCallback={this.props.adoptCallback} /></tbody>\n            </table>\n            \n        );\n    }\n}\n\n// Represents the politically leaning question\nclass LeanQuestion extends Component {\n    render() {\n        let callBack = this.props.adoptCallback;\n        return(\n            <tr>\n                <td>Where do you politically lean?</td>\n                <td>\n                    <label htmlFor=\"democrat\">Democrat</label>\n                    <input onClick={(e) => callBack(e.target.value, 'leaning')} aria-label=\"Democrat\" type=\"radio\" name=\"leaning\" id=\"democrat\" value=\"democrat\"/>\n                    <label htmlFor=\"republican\">Republican</label>\n                    <input onClick={(e) => callBack(e.target.value, 'leaning')} aria-label=\"Republican\" type=\"radio\" name=\"leaning\" id=\"republican\" value=\"republican\"/>\n                    <label htmlFor=\"other\">Other</label>\n                    <input onClick={(e) => callBack(e.target.value, 'leaning')} aria-label=\"Other\" type=\"radio\" name=\"leaning\" id=\"other\" value=\"other\"/>\n                </td>\n            </tr>\n        );\n    }\n}\n\n// Represents the Voting experience question \nclass ExperienceQuestion extends Component {\n    render() {\n        let callBack = this.props.adoptCallback;\n        return(\n            <tr>\n                <td>How satisfied are you with your overall experience?</td>\n                <td>\n                    <label htmlFor=\"q1-very-poor\">1</label>\n                    <input onClick={(e) => callBack(e.target.value, 'satisfaction')} aria-label=\"1\" type=\"radio\" name=\"satisfaction\" id=\"q1-very-poor\" value=\"very-poor\"/>\n                    <label htmlFor=\"q1-poor\">2</label>\n                    <input onClick={(e) => callBack(e.target.value, 'satisfaction')} aria-label=\"2\" type=\"radio\" name=\"satisfaction\" id=\"q1-poor\" value=\"poor\"/>\n                    <label htmlFor=\"q1-fair\">3</label>\n                    <input onClick={(e) => callBack(e.target.value, 'satisfaction')} aria-label=\"3\" type=\"radio\" name=\"satisfaction\" id=\"q1-fair\" value=\"fair\"/>\n                    <label htmlFor=\"q1-good\">4</label>\n                    <input onClick={(e) => callBack(e.target.value, 'satisfaction')} aria-label=\"4\" type=\"radio\" name=\"satisfaction\" id=\"q1-good\" value=\"good\"/>\n                    <label htmlFor=\"q1-very-good\">5</label>\n                    <input onClick={(e) => callBack(e.target.value, 'satisfaction')} aria-label=\"5\" type=\"radio\" name=\"satisfaction\" id=\"q1-very-good\" value=\"very-good\"/>\n                </td>\n            </tr>\n        );\n    }\n}\n\n// Represents the participation question\nclass ParticipateQuestion extends Component {\n    render() {\n        let callBack = this.props.adoptCallback;\n        return(\n            <tr>\n                <td>Did you participate in the most recent midterm election? (2018)</td>\n                <td>\n                    <label htmlFor=\"participateYes\">Yes</label>\n                    <input onClick={(e) => callBack(e.target.value, 'participation')} aria-label=\"yes\" type=\"radio\" name=\"participation\" id=\"participateYes\" value=\"yes\"/>\n                    <label htmlFor=\"participateNo\">No</label>\n                    <input onClick={(e) => callBack(e.target.value, 'participation')} aria-label=\"no\" type=\"radio\" name=\"participation\" id=\"participateNo\" value=\"no\"/>\n                </td>\n            </tr>\n        );\n    }\n}\n\n// Represents the convenience question\nclass ConvenienceQuestion extends Component {\n    render() {\n        let callBack = this.props.adoptCallback;\n        return(\n            <tr>\n                <td>How would you rate the convenience of voting by mail?</td>\n                <td>\n                    <label htmlFor=\"q2-very-poor\">1</label>\n                    <input onClick={(e) => callBack(e.target.value, 'mail')} aria-label=\"1\" type=\"radio\" name=\"mail\" id=\"q2-very-poor\" value=\"very-poor\"/>\n                    <label htmlFor=\"q2-poor\">2</label>\n                    <input onClick={(e) => callBack(e.target.value, 'mail')} aria-label=\"2\" type=\"radio\" name=\"mail\" id=\"q2-poor\" value=\"poor\"/>\n                    <label htmlFor=\"q2-fair\">3</label>\n                    <input onClick={(e) => callBack(e.target.value, 'mail')} aria-label=\"3\" type=\"radio\" name=\"mail\" id=\"q2-fair\" value=\"fair\"/>\n                    <label htmlFor=\"q2-good\">4</label>\n                    <input onClick={(e) => callBack(e.target.value, 'mail')} aria-label=\"4\" type=\"radio\" name=\"mail\" id=\"q2-good\" value=\"good\"/>\n                    <label htmlFor=\"q2-very-good\">5</label>\n                    <input onClick={(e) => callBack(e.target.value, 'mail')} aria-label=\"5\" type=\"radio\" name=\"mail\" id=\"q2-very-good\" value=\"very-good\"/>\n                </td>\n            </tr>\n        );\n    }\n}\n\n// Represents the online question\nclass OnlineQuestion extends Component {\n    render() {\n        let callBack = this.props.adoptCallback;\n        return(\n            <tr>\n                <td>Would you prefer online voting if it was available?</td>\n                <td>\n                    <label htmlFor=\"onlineYes\">Yes</label>\n                    <input onClick={(e) => callBack(e.target.value, 'online')} aria-label=\"yes\" type=\"radio\" name=\"online\" id=\"onlineYes\" value=\"yes\"/>\n                    <label htmlFor=\"participateNo\">No</label>\n                    <input onClick={(e) => callBack(e.target.value, 'online')} aria-label=\"no\" type=\"radio\" name=\"online\" id=\"onlineNo\" value=\"no\"/>\n                </td>\n            </tr>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Papa from 'papaparse';\nimport {Map, TileLayer, GeoJSON} from 'react-leaflet';\nimport hash from 'object-hash'; //for making unique keys\nimport Control from 'react-leaflet-control';\n\n// Component representing the single map to be displayed on the web application\nexport class MyMap extends Component {\n  \n  // Sets the state for the map. Takes in year, focus, and age props. \n  constructor(props){\n    super(props)\n    this.state = {\n      geojsondata: [],\n      homeCountyGeojson: [], \n      data: [],\n      allData: [],\n      targetYear: props.year,\n      targetFocus: props.focus,\n      targetAge: props.age,\n      countyInfoPopup:         \n        <div>\n          <h2>WA State County Data</h2>Hover over a county to see the official data\n        </div>\n    };\n  }\n\n  // Sets a new state when the component will receive props. \n  componentWillReceiveProps(nextProps){\n    this.setState({\n      targetYear: nextProps.year,\n      targetFocus: nextProps.focus,\n      targetAge: nextProps.age\n    })\n  }\n\n  // Sets a new state when the component will updates.\n  componentDidUpdate(prevProps) {\n    if(this.props.year !== prevProps.year || this.props.age !== prevProps.age || this.props.focus !== prevProps.focus){\n      this.setState((currentState, currentProps) => {\n        let returnObject = {\n          targetYear: this.props.year,\n          targetFocus: this.props.focus,\n          targetAge: this.props.age,\n          data: currentState.allData.filter(obj => obj.Age === this.props.age && obj.Year === this.props.year && obj.County !== 'zWashington State')\n        }\n        return returnObject;\n      })\n    }\n  }\n\n  // Is called when the component is mounted. Retrieves geojson data.\n  componentDidMount() {\n    this.mapRef = this.refs.map.leafletElement; //Add instance variable to be able to reference to map later on \n    //Retrieve geojson data for county boundaries on the map and pass to state\n    fetch('data/combined.geo.json')\n      .then(response => {\n        let dataPromise = response.json();\n        return dataPromise;\n      })\n      .then( jsonData => {\n        let listLocal = jsonData.features.map( (obj) => {\n            return obj.properties.name;\n        });\n        this.setState({\n          geojsondata: jsonData, \n          listOfCounties: listLocal\n        });\n      }); \n\n    // Parse the csv voter data into a JSON object and pass to state\n    let file = \"data/voterparticipation.csv\";\n    Papa.parse(file, {\n      header: true,\n      dynamicTyping: true,\n      download: true,\n      trimHeaders: true,\n      complete: (papaResults) => {\n        let papaData = papaResults.data;\n        let temp = papaData.filter(obj => obj.Age === this.state.targetAge && obj.Year === this.state.targetYear && obj.County !== 'zWashington State');\n        this.setState( {\n          allData: papaData,\n          data: temp\n        });\n      }\n    });\n  }\n\n  //Adding style for the specific county the user enters in the form\n  getSpecificCountyData = () => {\n    let countyGeoJSON = this.state.geojsondata.features.filter(obj => obj.properties.name === this.props.county);\n    return countyGeoJSON; \n  }\n\n  //Adding style to the geojson data of the map\n  addStyle = (feature) => {\n    let specificCountyData = this.state.data.filter(obj => obj.County === feature.properties.name);\n    return {\n      fillColor: this.getColor(specificCountyData[0][this.state.targetFocus]),\n      weight: 2,\n      opacity: 1,\n      color: 'white',\n      dashArray: '3',\n      fillOpacity: 0.8\n    };\n  }\n\n  //Called by addStyle, this adds color to each geojson county according to it's target value\n  getColor = (d) => {\n    return d > 0.9 ? '#1C3328' :\n    d > 0.8  ? '#2E5442' :\n    d > 0.7  ? '#41765D' :\n    d > 0.6  ? '#539777' :\n    d > 0.5   ? '#65B891' :\n    d > 0.4   ? '#81C4A5' :\n    d > 0.3   ? '#9DD1B9' :\n                '#C7E5D7';\n  }\n\n  addSpecificStyling = (feature) => { //Specific styling for user's home county\n  let specificCountyData = this.state.data.filter(obj => obj.County === feature.properties.name);\n    return {\n      fillColor: this.getColor(specificCountyData[0][this.state.targetFocus]),\n      weight: 5,\n      color: '#CB958E',\n      dashArray: '',\n      fillOpacity: 0.7\n    }\n  }\n\n  //Applies the Control popup\n  onEachFeature = (feature, layer) => {\n\n    // Adds popup information and text to the state, so it may be called and in render()\n    layer.on({\n      mouseover: (event) => {\n        let specificCountyData = this.state.data.filter(obj => obj.County === feature.properties.name);\n        let targetFocus = Math.round(specificCountyData[0][this.state.targetFocus] * 100);\n        let displayedText = \n        <div>\n          <h2>{this.state.targetFocus}</h2> <b>{feature.properties.name} County</b> <br />{targetFocus}% of {this.state.targetAge} year olds in {this.state.targetYear}\n        </div>;\n        this.setState({countyInfoPopup: displayedText});\n      },\n      click: (event) => {\n        this.mapRef.fitBounds(layer.getBounds()); //Zooms to county clicked on\n      }\n    });\n\n  }\n\n  // Render Map component. Contains the map and legend as well. \n  render() {\n\n    let mapViewport = {\n      center: [47.3511, -120.7401],\n      zoom: 6\n    }\n\n    let legend = \n      <div className='info legend'>\n        <i style={{background:\"#C7E5D7\"}}></i>0-30%<br></br>\n        <i style={{background:\"#9DD1B9\"}}></i>30-40%<br></br>\n        <i style={{background:\"#81C4A5\"}}></i>40-50%<br></br>\n        <i style={{background:\"#65B891\"}}></i>50-60%<br></br>\n        <i style={{background:\"#539777\"}}></i>60-70%<br></br>\n        <i style={{background:\"#41765D\"}}></i>70-80%<br></br>\n        <i style={{background:\"#2E5442\"}}></i>80-90%<br></br>\n        <i style={{background:\"#1C3328\"}}></i>90+%<br></br>\n      </div>;\n\n    // Returns a map that contains a legend and and the map itself. This data is layered over the initial tile layer.\n    return (\n      <Map ref=\"map\" id=\"map\" viewport={mapViewport} style={{ height: '470px' }}>\n        <TileLayer\n          url='https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1Ijoia3lsZWF2YWxhbmkiLCJhIjoiY2pvdzd3NGtzMGgxMjNrbzM0cGhwajRxNyJ9.t8zAjKz12KLZQ8GLp2hDFQ'\n          attribution='Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>'\n          minZoom='2'\n          maxZoom='20'\n          id='mapbox.streets'\n        />\n        {this.state.data.length > 0 ? \n        <div>\n          <GeoJSON ref=\"geojson\" key={hash(this.state.geojsondata)} data={this.state.geojsondata} style={this.addStyle} onEachFeature={this.onEachFeature.bind(this)}/>\n        \n          {this.state.listOfCounties ? \n          this.state.listOfCounties.includes(this.props.county) ?\n            <GeoJSON ref=\"geojson2\" key={hash(this.props.county)} data={this.getSpecificCountyData()} style={this.addSpecificStyling} onEachFeature={this.onEachFeature.bind(this)}/>\n          :\n          <div />\n        :\n        <div />}\n        \n        </div>\n        : \n        <div />}\n\n        <Control position=\"bottomright\"> {/* Legend popup */}\n          <div>\n            {legend}\n          </div>\n        </Control>\n        <Control position=\"topright\"> {/* Main County Information popup */}\n          <div className='info legend'>\n            {this.state.countyInfoPopup}\n          </div>\n        </Control>\n        <Control position='bottomleft'> {/* Home County popup on map */}\n          \n        {this.state.listOfCounties ? \n        this.state.listOfCounties.includes(this.props.county) ?\n          <div className='info'>\n            Home County: {this.props.county}\n          </div>\n          :\n          <div className='info'>\n            Enter your Home County in the Form Above\n          </div>\n        :\n        <div/>\n        }\n        \n        </Control>\n      </Map>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { MyMap } from './MyMap';\n\n// Component representing the container for the map\nexport class MapContainer extends Component {\n    // Sets the state for the map container\n    constructor(props){\n        super(props)\n        this.state = {\n          targetYear: 2008,\n          targetFocus: 'Total Registered Population',\n          targetAge: '18-24'\n        };\n      }\n\n    // Changes the target year on click by taking in a target value \n    clickYear =  (value) => {\n        console.log(value);\n        this.setState({\n            targetYear: parseInt(value)\n        })\n    }\n\n    // Changes the age on click by taking in a target value \n    clickAge =  (value) => {\n        console.log(value);\n        this.setState({\n            targetAge: value\n        })\n    }\n\n    // Changes the focus year on click by taking in a target value \n    clickFocus =  (value) => {\n        console.log(value);\n        this.setState({\n            targetFocus: value\n        })\n    }\n\n    // Renders the map itself and the drop down menues to modify the data being displayed.\n    render() {\n        let buttons = \n        <div id=\"map-options\">\n            <label htmlFor=\"clickYear\">Year</label>\n            <select aria-label=\"Change Year\" id=\"clickYear\"onChange={ (event) => this.clickYear(event.target.value)}>\n                <option value=\"2008\">2008</option>\n                <option value=\"2010\">2010</option>\n                <option value=\"2012\">2012</option>\n                <option value=\"2014\">2014</option>\n                <option value=\"2016\">2016</option>\n            </select>\n\n            <label htmlFor=\"clickAge\">Age</label>\n            <select aria-label=\"Change Age\" id=\"clickAge\"onChange={ (event) => this.clickAge(event.target.value)}>\n                <option value=\"18-24\">18-24</option>\n                <option value=\"25-34\">25-34</option>\n                <option value=\"35-44\">35-44</option>\n                <option value=\"45-54\">45-54</option>\n                <option value=\"55-64\">55-64</option>\n                <option value=\"65-\">65+</option>\n                <option value=\"0TOTAL\">All</option>\n            </select>\n\n            <label htmlFor=\"clickFocus\">Focus</label>\n            <select aria-label=\"Change Year\" id=\"clickFocus\" onChange={ (event) => this.clickFocus(event.target.value)}>\n                <option value=\"Total Registered Population\">Registered Population</option>\n                <option value=\"Total Voter Turnout\">Voter Turnout</option>\n            </select>\n        </div>\n        ;\n        return (\n            <div id=\"map-container\">\n                <h4>WA Voter Registration Data by County</h4>\n                {buttons}\n                <div className=\"map leaflet-container\">\n                    <MyMap year={this.state.targetYear} age={this.state.targetAge} focus={this.state.targetFocus} county={this.props.county}></MyMap>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport {Pie} from 'react-chartjs-2';\n\n// Component representing a single chart\nexport default class Chart extends Component {\n    // Takes a chartData prop representing data and text prop representing the \"title\" of the chart\n    constructor(props) {\n        super(props);\n        this.state = \n            {chartData: this.props.chartData,\n             text: this.props.text,\n             labels: this.props.labels,\n             backgroundColor: this.props.backgroundColor};\n    }\n\n    // Sets data and text of the chart when it receives new props\n    componentWillReceiveProps(nextProps) {\n        this.setState({chartData: nextProps.chartData,\n            text: nextProps.text,\n            labels: nextProps.labels,\n            backgroundColor: nextProps.backgroundColor});  \n    }\n\n    // Returns a single chart\n    render() {\n        console.log(this.state.chartData[0]);\n        return (\n            <Pie\n                data = {{\n                    labels: this.state.labels,\n                    datasets: [{\n                        backgroundColor: this.state.backgroundColor,\n                        data: this.state.chartData[0]\n                    }]\n                }}\n\n                options = {{\n                    title: {\n                        display: true,\n                        text: this.state.text,\n                        fontSize: 20\n                    },\n            \n                    animation: {\n                        animateScale: true,\n                        duration: 1000,\n                    },\n                    legend: {\n                        display: false\n                    },\n            \n                }}\n                width={300} height={300} \n            />\n        )\n    }\n}","import React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport Chart from './Chart';\n\n// Component representing the container for all charts to render\nexport default class Charts extends Component {\n    // Takes in a county prop representing the county the user has chosen.\n    constructor(props) {\n        super(props);\n        this.state = {\n            allFeedback: {},\n            overallSatisfaction: [],\n            charts: [],\n            questionNames: [],\n            textNames: []\n        };\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    // Processes the data array and returns an array representing the feedback from all users\n    processResponses(data) {\n        let results = {leaning: [0, 0], satisfaction: [0 ,0 ,0 ,0 ,0], \n                       participation: [0, 0], mail: [0 ,0 ,0 ,0 ,0], \n                       online: [0, 0]};\n        data.forEach( (entry) => {\n            if (entry.leaning === 'democrat') {\n                results.leaning[0]++;               // 0 = democrat\n            } else {        \n                results.leaning[1]++;               // 1 = republican\n            }\n\n            if (entry.satisfaction === 'very-poor') {\n                results.satisfaction[0]++;\n            } else if (entry.satisfaction === 'poor') {\n                results.satisfaction[1]++;\n            } else if (entry.satisfaction === 'fair') {\n                results.satisfaction[2]++;\n            } else if (entry.satisfaction === 'good') {\n                results.satisfaction[3]++;\n            } else {\n                results.satisfaction[4]++;\n            }\n\n            if (entry.participation === 'no') {\n                results.participation[0]++;         // 0 = no\n            } else {\n                results.participation[1]++;         // 1 = yes\n            }\n\n            if (entry.mail === 'very-poor') {\n                results.mail[0]++;\n            } else if (entry.mail === 'poor') {\n                results.mail[1]++;\n            } else if (entry.mail === 'fair') {\n                results.mail[2]++;\n            } else if (entry.mail === 'good') {\n                results.mail[3]++;\n            } else {\n                results.mail[4]++;\n            }\n\n            if (entry.online === 'yes') {\n                results.online[1]++;                   // 1 = yes\n            } else {\n                results.online[0]++;                   // 0 = no\n            }\n        });\n        return results;\n    }\n\n    // Takes a data array and obtains and returns an array representing the \n    // overall satisfaction for all users.\n    getOverallSatisfaction(data) {\n        let results = [0, 0, 0, 0, 0];\n        for (let i=0; i<data.length; i++) {\n            if (data[i].satisfaction === 'very-poor') {\n                results[0]++;\n            } else if (data[i].satisfaction === 'poor') {\n                results[1]++;\n            } else if (data[i].satisfaction === 'fair') {\n                results[2]++;\n            } else if (data[i].satisfaction === 'good') {\n                results[3]++;\n            } else {\n                results[4]++;\n            }\n        }\n        return results;\n    }\n\n    // When the component mounts, obtain the feedback from the database and initialize the charts with updated information\n    componentDidMount() {\n        let stateCopy = this.state;\n        stateCopy.textNames = ['Political Leaning', 'Mail Convenience', 'Participation', 'Online Voting', 'Overall Satisfaction'];\n        stateCopy.questionNames = ['leaning', 'mail', 'participation', 'online', 'satisfaction'];\n        this.feedbackRef = firebase.database().ref('feedback');\n        // Set feedback and initialize charts\n        this.feedbackRef.on('value', (snapshot) => {\n            let feedback = snapshot.val();\n            feedback = Object.keys(feedback).map( (key => {\n                let response = feedback[key];\n                return response;\n            }));\n            let totalResponses = this.getOverallSatisfaction(feedback);\n            stateCopy.overallSatisfaction = totalResponses;\n            feedback = this.processResponses(feedback);\n            stateCopy.allFeedback = feedback;\n            // Initialize the charts\n            stateCopy.charts[0] = ({data: totalResponses, text: 'Overall Satisfaction', labels: [\"Very Poor\", \"Poor\", \"Fair\", \"Good\", \"Very Good\"],\n                                    backgroundColor: ['#FC8F6E', '#D7A44A', '#9DB756', '#5EC087', '#3EBEBF']});       // Store all charts first? then select which one to display?\n            stateCopy.charts[1] = ({data: feedback.mail, text: 'Mail Convenience', labels: [\"Very Poor\", \"Poor\", \"Fair\", \"Good\", \"Very Good\"],\n                                    backgroundColor: ['#FC8F6E', '#D7A44A', '#9DB756', '#5EC087', '#3EBEBF']}); \n            stateCopy.charts[2] = ({data: feedback.leaning, text: 'Political Leaning', labels: [\"Democrat\", \"Republican\", \"Other\"],\n                                    backgroundColor: ['#164074', '#CF2E29', '#A9AAAD']}); \n            this.setState(stateCopy);\n        });\n    }\n\n    // Removes referene when the components unmounts.\n    componentWillUnmount() {\n        this.feedbackRef.off();\n    }\n    \n    // Removes specified chart at the chartIndex.\n    removeChart(chartIndex) {\n        let chartDataCopy = this.state;\n        chartDataCopy.charts.splice(chartIndex, 1);\n        this.setState(chartDataCopy);\n    }\n\n    // Updates chart based on the specified index and with the text/question for the chart.\n    updateChart(chart, question) {\n        let chartDataCopy = this.state; \n        let newChart = {};\n        // Determine proper labels and colors for the type of question\n        if (this.state.questionNames[this.state.questionNames.indexOf(question)] === 'leaning') {\n            newChart.labels = [\"Democrat\", \"Republican\", \"Other\"];\n            newChart.backgroundColor = ['#164074', '#CF2E29', '#A9AAAD'];\n        } else if (this.state.questionNames[this.state.questionNames.indexOf(question)] === 'mail') {\n            newChart.labels = [\"Very Poor\", \"Poor\", \"Fair\", \"Good\", \"Very Good\"];\n            newChart.backgroundColor = ['#FC8F6E', '#D7A44A', '#9DB756', '#5EC087', '#3EBEBF'];\n        } else if (this.state.questionNames[this.state.questionNames.indexOf(question)] === 'participation') {\n            newChart.labels = [\"Yes\", \"No\"];\n            newChart.backgroundColor = ['#2ba031', '#a02b2b'];\n        } else if (this.state.questionNames[this.state.questionNames.indexOf(question)] === 'online') {\n            newChart.labels = [\"Yes\", \"No\"];\n            newChart.backgroundColor = ['#2ba031', '#a02b2b'];\n        } else {\n            newChart.labels = [\"Very Poor\", \"Poor\", \"Fair\", \"Good\", \"Very Good\"];\n            newChart.backgroundColor = ['#FC8F6E', '#D7A44A', '#9DB756', '#5EC087', '#3EBEBF'];\n        }\n        newChart.data = this.state.allFeedback[question];\n        newChart.text = this.state.textNames[this.state.questionNames.indexOf(question)];\n        chartDataCopy.charts[chart] = newChart;\n        this.setState(chartDataCopy);\n    }\n\n    // Renders the charts\n    render() {\n        // Represents the options the user can select to change between charts\n        let options = [];\n        for (let j=0; j<5; j++) {\n            options[j] = <option key={j} value={this.state.questionNames[j]}>{this.state.textNames[j]}</option>\n        }\n\n        let user = firebase.auth().currentUser;\n        \n        // The charts to be rendered\n        let charts = this.state.charts.map( (chart) => {\n            return (\n                <div className=\"chart\" key={this.state.charts.indexOf(chart)}>\n                    <div>\n                        {user ? <select onChange={ (event) => {            \n                            this.updateChart(this.state.charts.indexOf(chart), event.target.value)\n                        }}>{options}</select> : <div></div>}\n                    </div>\n                    {user ? <div className=\"input-group-append\">\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={ () => this.removeChart(this.state.charts.indexOf(chart))}>\n                            <span className=\"fa fa-times\" aria-label=\"remove\"></span>\n                        </button>\n                    </div> : <div></div>}\n                    <Chart chartData={[chart.data]} text={chart.text} labels={chart.labels} backgroundColor={chart.backgroundColor}/>\n                </div>);\n        });\n        \n        let stateCopy = this.state;\n        // Returns the charts to be displayed on the application. When the user presses the add chart button, a new \n        // chart is rendered. Add chart is only displayed when the user has inputted a county.\n        return (\n            <div id=\"charts\">\n                <div id=\"charts-header\">\n                {user ? <button id=\"add-chart\" onClick={ () => {\n                        stateCopy.charts.push({data: this.state.overallSatisfaction, text: 'Overall Satisfaction', \n                                               labels: [\"Very Poor\", \"Poor\", \"Fair\", \"Good\", \"Very Good\"],\n                                               backgroundColor: ['#FC8F6E', '#D7A44A', '#9DB756', '#5EC087', '#3EBEBF']});\n                        this.setState(stateCopy);\n                    }}>Add Chart</button>\n                    : <div></div>}\n                </div>\n                <div id=\"charts-container\">\n                    {this.state.charts.length > 0 ? charts : <div />}\n                </div> \n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { MapContainer } from './Map/MapContainer';\nimport Charts from './Charts/Charts';\n\n// Component that represents the analytics section that contains both the charts and map.\nexport default class Analytics extends Component {\n    // Renders the header, charts, and map container. \n    render() {\n        return (\n            <div id=\"analytics\">\n                <AnalyticsHeader />\n                <div id=\"analytics-container\">\n                    <div id=\"chart-legend\" className=\"legend\">\n                        <Legend />\n                    </div>\n                    <Charts county={this.props.county} submittedForm={this.props.submittedForm}/>\n                    <MapContainer county={this.props.county}></MapContainer>\n                </div>\n            </div>\n        );\n    }\n}\n\n// Legend that corresponds to the charts\nclass Legend extends Component {\n    // Renders the Legend component\n    render() {\n        return (\n            <div>\n                <ul className=\"0-legend\">\n                    <li><span id=\"legend1\"></span>Very Poor</li>\n                    <li><span id=\"legend2\"></span>Poor</li>\n                    <li><span id=\"legend3\"></span>Fair</li>\n                    <li><span id=\"legend4\"></span>Good</li>\n                    <li><span id=\"legend5\"></span>Very Good</li>\n                </ul>\n                <ul className=\"0-legend\">\n                    <li><span id=\"legend6\"></span>Democrat</li>\n                    <li><span id=\"legend7\"></span>Republican</li>\n                    <li><span id=\"legend8\"></span>Other</li>\n                </ul>\n                <ul className=\"0-legend\">\n                    <li><span id=\"legend9\"></span>Yes</li>\n                    <li><span id=\"legend10\"></span>No</li>\n                </ul>\n            </div>\n        );\n    }\n}\n\n// Header for the analytics section\nclass AnalyticsHeader extends Component {\n    // Renders the header component.\n    render() {\n        return(\n            <div id=\"analytics-header\">\n                <h2>Analytics</h2>\n                <p>Learn more about voter turnout, satisfaction, and feedback.</p>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport NavbarFeatures from '../About/Navbar';\nimport Start from './Start';\nimport Form from './Form';\nimport Analytics from './Analytics';\nimport Footer from '../About/Footer';\n\n\n// Component that represents the VoteFeedback feature where the user can input their county and provide feedback.\n// They can also view analytical data here about voter turnout and other responses.\nexport default class VoteFeedback extends Component {\n    // County state is used to share the county state between the Start component and the Analytics component\n    // in order to render the chart. \n    constructor(props) {\n        super(props);\n        this.state = {\n            currentCounty: \"\"\n        };\n    }\n\n    // Takes in county name parameter to change the state county\n    chooseCounty(countyName) {\n        this.setState({currentCounty: countyName});\n    }\n\n    // Renders the component \n    render() {\n        return (\n            <div>\n                <NavbarFeatures dark={false} light={true} />\n                <Start county={this.state.currentCounty} adoptCallback={ (countyName) => this.chooseCounty(countyName)}/>\n                <Form adoptCallback={ () => this.submitForm()} />\n                <Analytics county={this.state.currentCounty} />\n                <Footer />\n            </div>\n        );\n    }\n}","import React, { Component } from 'react'; //import React Component\nimport firebase from 'firebase/app';\n\nimport Header from '../About/Header';\nimport Footer from '../About/Footer';\nimport About from '../About/About';\n\nimport './SignUpForm.css'; //load module CSS\n\n// Component that represents the sign up form.\nclass SignUpForm extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      'email': undefined,\n      'password': undefined\n    }; \n  }\n\n  //A callback function for registering new users\n  handleSignUp(email, password, handle, avatar) {\n    this.setState({errorMessage:null}); //clear any old errors\n    firebase.auth().createUserWithEmailAndPassword(email,password)\n      .then( (createdUser) => (\n      createdUser.user.updateProfile({\n          displayName: handle,\n          photoURL: avatar\n      }).catch( (e) => {\n          this.setState({\n          errorMessage: e.message\n          });\n      })\n      ).catch( (e) => {\n      this.setState({\n          errorMessage: e.message\n      });\n      })\n    ).catch( (e) => {\n        this.setState({\n        errorMessage: e.message\n        });\n    });\n  }\n\n  //A callback function for logging in existing users\n  handleSignIn(email, password) {\n    this.setState({errorMessage:null}); //clear any old errors\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .catch( (e) => {\n        this.setState({\n            errorMessage: e.message\n        });\n      });\n  }\n\n  //A callback function for logging out the current user\n  handleSignOut(){\n    this.setState({errorMessage:null}); //clear any old errors\n    firebase.auth().signOut()\n      .catch( (e) => {\n      this.setState({\n          errorMessage: e.message\n      });\n    });\n  }\n\n  componentDidMount(){\n    this.authUnRegFunc = firebase.auth().onAuthStateChanged( (user) => {\n      if (user) {\n      this.setState({\n          user: user,\n          loading: false\n      })\n      } else {\n      this.setState({\n          user: null\n      })\n      }\n    }); \n  }\n\n  componentWillUnmount(){\n    this.authUnRegFunc();\n  }\n\n  //update state for specific field\n  handleChange(event) {\n    let field = event.target.name; //which input\n    let value = event.target.value; //what value\n\n    let changes = {}; //object to hold changes\n    changes[field] = value; //change this field\n    this.setState(changes); //update state\n  }\n\n  //handle signUp button\n  handleSignUpButton(event) {\n    event.preventDefault(); //don't submit\n    this.handleSignUp(this.state.email, this.state.password);\n  }\n\n  //handle signIn button\n  handleSignInButton(event) {\n    event.preventDefault(); //don't submit\n    this.handleSignIn(this.state.email, this.state.password);\n  }\n\n  render() {\n    let content = null;\n    if(!this.state.user) { //if logged out, show signup form\n      content = (\n        <div className=\"container\">\n          {this.state.errorMessage &&\n            <p className=\"alert alert-danger\">{this.state.errorMessage}</p>\n          }\n          <div className=\"container\" id=\"sign-in\">\n          <div className=\"flex-container\">\n            <h1>Sign Up</h1>\n            <form>\n              {/* email */}\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <input className=\"form-control\"\n                  id=\"email\"\n                  type=\"email\"\n                  name=\"email\"\n                  onChange={(e) => this.handleChange(e)}\n                />\n              </div>\n              \n              {/* password */}\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input className=\"form-control\"\n                  id=\"password\"\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={(e) => this.handleChange(e)}\n                />\n              </div>\n              \n              {/* buttons */}\n              <div className=\"form-group\">\n                <button className=\"btn btn-primary mr-2\"\n                  onClick={(e) => this.handleSignUpButton(e)}\n                  >\n                  Sign-up\n                </button>\n                  <button className=\"btn btn-primary\"\n                  onClick={(e) => this.handleSignInButton(e)}\n                  >\n                  Sign-in\n                </button>\n              </div>\n            </form>\n          </div>\n          </div>\n        </div>\n      );\n      } \n      else { //if logged in, show main page\n        content = (\n          <div id=\"main\">\n            <Header />\n            <About />\n            <Footer />\n          </div>\n        );\n      }\n\n    return (\n      <div>\n        {content}\n      </div>\n    )\n  }\n}\n\nexport default SignUpForm","import React, { Component } from 'react'; //import React Component\nimport firebase from 'firebase/app';\n\nimport './SignUpForm.css'; //load module CSS\n\n// Component that represents the signout screen for when the user signs out. \nclass SignOutScreen extends Component {\n  render() {\n\n    // When authentication changes.\n    firebase.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        // User is signed in. Bring them back to the main page\n        firebase.auth().signOut().then(() => {\n          window.setTimeout(() => {\n            window.location.href = \"/\"\n          }, 2000);\n        })\n      } else {\n        // No user is signed in.\n      }\n    });\n\n    return (\n      <div>\n          <h1>You have signed out</h1>\n          <p>You will be redirected to the home page in 2 seconds.</p>\n      </div>\n    )\n  }\n}\n\nexport default SignOutScreen","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'leaflet/dist/leaflet.css';\nimport {} from './components/style.css';\nimport 'react-rangeslider/lib/index.css';\n\n\nimport React, { Component } from 'react';\nimport Header from './components/About/Header';\nimport Footer from './components/About/Footer';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport About from './components/About/About';\nimport Justices from './components/Justices/Justices'\nimport VoteFeedback from './components/VoterFeedback/VoteFeedback'\nimport SignUpForm from './components/signup/SignUpForm';\nimport SignOutScreen from './components/signup/SignOutScreen';\n\n// Component App that represents the main application and routes to the homepage and about page\n// depending on what the user chooses in the navigation bar. Defaults to the home page\nexport default class App extends Component {\n    // Renders the App component\n    render() {\n        return (\n            <Router basename={process.env.PUBLIC_URL+'/'}>\n                <Switch>\n                    <Route exact path='/home' component={HomePage} />\n                    <Route exact path='/about' component={About} />\n                    <Route exact path='/justices' render={(props) => {\n                        return <Justices {...props} courtData={this.props.courtData}/>\n                    }}/>\n                    <Route exact path='/votefeedback' component={VoteFeedback} />\n                    <Route exact path='/signin' component={SignUpForm} />\n                    <Route exact path='/signout' component={SignOutScreen} />\n                    <Route component={HomePage} /> \n                </Switch>\n            </Router>\n        );\n    }\n}\n\n// Main page for app\nclass HomePage extends Component {\n\n    // Renders the HomePage component. Contains the Header, About and footer. \n    render() {\n        return (\n            <div id=\"main\">\n                <Header />\n                <About />\n                <Footer />\n            </div>\n        );\n    }\n}\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Papa from 'papaparse';\nimport {BrowserRouter} from \"react-router-dom\";\n\n//Firbase imports and configuration\nimport firebase from 'firebase/app';\nimport 'firebase/auth'; \nimport 'firebase/database'\n\nvar config = {\n    apiKey: \"AIzaSyDDz3LXrgrWvk2gYRXNqpC_hXwcj67q9os\",\n    authDomain: \"votefact-806f4.firebaseapp.com\",\n    databaseURL: \"https://votefact-806f4.firebaseio.com\",\n    projectId: \"votefact-806f4\",\n    storageBucket: \"votefact-806f4.appspot.com\",\n    messagingSenderId: \"128219094427\"\n  };\n  firebase.initializeApp(config);\n\nPapa.parse(require('../src/data/scores.csv'), {\n    header: true,\n    download: true,\n    dynamicTyping: true,\n    complete: (results) => {\n        ReactDOM.render(<BrowserRouter><App courtData={results.data}/></BrowserRouter>, document.getElementById('root'))\n    }\n  });\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}